{"meta":{"title":"xyh's Blog","subtitle":"何以解忧，唯有代码","description":"前端 java PHP 分享 博客","author":"XYH","url":"http://xiayunhu.github.io"},"pages":[{"title":"404-找不到页面","date":"2018-10-10T13:26:33.000Z","updated":"2018-10-16T02:58:06.000Z","comments":false,"path":"/404.html","permalink":"http://xiayunhu.github.io//404.html","excerpt":"","text":"404 Not Found&lt;!DOCTYPE HTML&gt; L2Dwidget.init({\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"model\":{\"scale\":1,\"hHeadPos\":0.5,\"vHeadPos\":0.618,\"jsonPath\":\"live2d-widget-model-shizuku\"},\"display\":{\"superSample\":2,\"width\":150,\"height\":300,\"position\":\"left\",\"hOffset\":0,\"vOffset\":-20},\"mobile\":{\"show\":false,\"scale\":0.5},\"react\":{\"opacityDefault\":0.7,\"opacityOnHover\":0.2},\"log\":false,\"tagMode\":false});"},{"title":"自我简介","date":"2018-10-10T05:16:06.000Z","updated":"2018-11-08T12:20:52.229Z","comments":false,"path":"about/index.html","permalink":"http://xiayunhu.github.io/about/index.html","excerpt":"","text":"关于我&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;姓名： XYH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;性别： 男&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;座右铭： 何以解忧，唯有代码。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;自我认识： 一个走向全栈的呆萌小菜鸟&nbsp;&nbsp;&nbsp;(ノ◕ω◕)ノ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;深藏武林绝学： 熟悉Html/CSS和JavaScript、手持bootStrap、layui框架，PHP开发，但对Java特别感兴趣,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;迫切希望进阶成小鸟。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;修炼社区：知乎、微博、CSDN、GitHub&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;休闲：听歌、看电影、养花、旅游。联系我来自一只菜鸟的邀请，欢迎和我一起分享知识。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;邮箱：2390472338@qq.com&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QQ：2390472338"},{"title":"文章分类","date":"2018-10-10T05:15:03.000Z","updated":"2018-11-08T01:56:33.618Z","comments":false,"path":"categories/index.html","permalink":"http://xiayunhu.github.io/categories/index.html","excerpt":"","text":"目 前 共 计 5 个 分 类"},{"title":"archives","date":"2018-10-10T05:19:03.000Z","updated":"2018-11-08T01:56:26.596Z","comments":false,"path":"archives/index.html","permalink":"http://xiayunhu.github.io/archives/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-10-10T05:06:14.000Z","updated":"2018-11-08T02:00:21.408Z","comments":false,"path":"tags/index.html","permalink":"http://xiayunhu.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"PHP基础第一章","slug":"PHP基础","date":"2019-04-01T16:00:00.000Z","updated":"2019-04-02T01:21:49.240Z","comments":true,"path":"PHP/PHP基础/","link":"","permalink":"http://xiayunhu.github.io/PHP/PHP基础/","excerpt":"","text":"前言刚刚毕业实习的我在公司呆了段时间，由于各种原因，考虑再三，最终我还是决定学习PHP作为我后台的入门语言。为什么要选择PHP，因为PHP入门比较容易，可在不同的平台上运行（Windows、Linux、Unix、Mac OS X 等），与目前几乎所有的正在被使用的服务器相兼容（Apache、IIS 等）。从这章开始，将记录下我所学PHP全部的历程，切记一定要坚持！不要听别人说Java也好，学了一半就去学Java了。贵在坚持。加油！一起努力。 第一个程序具体在哪运行的自己可以去菜鸟教程或者百度上找。12345678910&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;body&gt; &lt;?php echo &quot;Hello World!&quot;; ?&gt; &lt;/body&gt; &lt;/html&gt;","categories":[{"name":"PHP","slug":"PHP","permalink":"http://xiayunhu.github.io/categories/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://xiayunhu.github.io/tags/PHP/"}]},{"title":"Layui的左侧三级导航栏","slug":"layui","date":"2019-03-26T16:00:00.000Z","updated":"2019-03-27T06:19:55.124Z","comments":true,"path":"Layui/layui/","link":"","permalink":"http://xiayunhu.github.io/Layui/layui/","excerpt":"","text":"layui简介经典模块化前端框架之一，由职业前端倾情打造，面向所有层次的前后端开发者，零门槛开箱即用的前端UI解决方案。有好多的功能组件直接使用，非常的方便，自适应页面。可以加入layui社区获得更多的帮助。因为我在layui的官网给出的案例没有导航的三级菜单，偶然的发现了一个三级的菜单，这个使用layui-nav-tree树写的三级，我感觉挺好用的。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;&gt; &lt;title&gt;&lt;/title&gt; &lt;link href=&quot;~/layui-v2.2.5/layui-v2.2.5/layui/css/layui.css&quot; rel=&quot;stylesheet&quot; /&gt; &lt;style&gt; ol li a &#123; background-color: rgba(0,0,0,1) !important; &#125; .three_this &#123; background-color: #808080 !important; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;layui-layout-body&quot;&gt; &lt;div class=&quot;layui-layout layui-layout-admin&quot;&gt; &lt;div class=&quot;layui-header&quot;&gt; &lt;div class=&quot;layui-logo&quot;&gt;layui 后台布局&lt;/div&gt; &lt;ul class=&quot;layui-nav layui-layout-left&quot;&gt; &lt;li class=&quot;layui-nav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;控制台&lt;/a&gt;&lt;/li&gt; &lt;li class=&quot;layui-nav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;商品管理&lt;/a&gt;&lt;/li&gt; &lt;li class=&quot;layui-nav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;用户管理&lt;/a&gt;&lt;/li&gt; &lt;li class=&quot;layui-nav-item&quot;&gt; &lt;a href=&quot;javascript:;&quot;&gt;日常&lt;/a&gt; &lt;dl class=&quot;layui-nav-child&quot;&gt; &lt;dd&gt;&lt;a href=&quot;&quot;&gt;邮件管理&lt;/a&gt;&lt;/dd&gt; &lt;dd&gt;&lt;a href=&quot;&quot;&gt;消息管理&lt;/a&gt;&lt;/dd&gt; &lt;dd&gt;&lt;a href=&quot;&quot;&gt;授权管理&lt;/a&gt;&lt;/dd&gt; &lt;/dl&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul class=&quot;layui-nav layui-layout-right&quot;&gt; &lt;li class=&quot;layui-nav-item&quot;&gt; &lt;a href=&quot;javascript:;&quot;&gt; &lt;img src=&quot;~/images/tb.png&quot; class=&quot;layui-nav-img&quot; /&gt; .Net海 &lt;/a&gt; &lt;dl class=&quot;layui-nav-child&quot;&gt; &lt;dd&gt;&lt;a href=&quot;&quot;&gt;基本资料&lt;/a&gt;&lt;/dd&gt; &lt;dd&gt;&lt;a href=&quot;&quot;&gt;安全设置&lt;/a&gt;&lt;/dd&gt; &lt;/dl&gt; &lt;/li&gt; &lt;li class=&quot;layui-nav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;退出&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;layui-side layui-bg-black&quot;&gt; &lt;div class=&quot;layui-side-scroll&quot;&gt; &lt;ul class=&quot;layui-nav layui-nav-tree&quot; lay-filter=&quot;test&quot;&gt; &lt;li class=&quot;layui-nav-item layui-nav-itemed&quot;&gt; &lt;a class=&quot;&quot; href=&quot;javascript:;&quot;&gt;所有商品&lt;/a&gt; &lt;dl class=&quot;layui-nav-child&quot;&gt; &lt;dd&gt; &lt;a href=&quot;javascript:;&quot; class=&quot;menu_three &quot;&gt;列表一&lt;/a&gt; &lt;ol class=&quot;layui-nav-child&quot; style=&quot;display: none;&quot;&gt; &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;三级列表一&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;三级列表二&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;三级列表三&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;超链接&lt;/a&gt;&lt;/li&gt; &lt;/ol&gt; &lt;/dd&gt; &lt;dd&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;menu_three&quot;&gt;列表二&lt;/a&gt; &lt;ol class=&quot;layui-nav-child&quot; style=&quot;display: none;&quot;&gt; &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;三级列表一&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;三级列表二&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;三级列表三&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;超链接&lt;/a&gt;&lt;/li&gt; &lt;/ol&gt; &lt;/dd&gt; &lt;dd&gt;&lt;a href=&quot;javascript:;&quot;&gt;列表三&lt;/a&gt;&lt;/dd&gt; &lt;dd&gt;&lt;a href=&quot;&quot;&gt;超链接&lt;/a&gt;&lt;/dd&gt; &lt;/dl&gt; &lt;/li&gt; &lt;li class=&quot;layui-nav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;云市场&lt;/a&gt;&lt;/li&gt; &lt;li class=&quot;layui-nav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;发布商品&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;layui-body&quot;&gt; &lt;!-- 内容主体区域 --&gt; &lt;div style=&quot;padding: 15px;&quot;&gt;内容主体区域&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;layui-footer&quot;&gt; &lt;!-- 底部固定区域 --&gt; © layui.com - 底部固定区域 &lt;/div&gt; &lt;/div&gt; //注意路劲 &lt;script src=&quot;~/layui-v2.2.5/layui-v2.2.5/layui/layui.js&quot;&gt;&lt;/script&gt; &lt;script&gt; //JavaScript代码区域 layui.use([&apos;element&apos;, &apos;jquery&apos;], function () &#123; var element = layui.element, $ = layui.jquery; $(&quot;.menu_three&quot;).on(&quot;click&quot;, function () &#123; $(this).next().toggle(); $.each($(this).parent().siblings(), function (i, e) &#123; $(e).find(&quot;ol&quot;).hide();; &#125;); &#125;) $(&quot;ol&quot;).on(&quot;click&quot;, &quot;li a&quot;, function () &#123; $.each($(this).parent().siblings(), function (i, e) &#123; $(e).find(&quot;a&quot;).removeClass(&apos;three_this&apos;) &#125;); $(this).addClass(&apos;three_this&apos;); // 添加当前元素的样式 &#125;) &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"Layui","slug":"Layui","permalink":"http://xiayunhu.github.io/categories/Layui/"}],"tags":[{"name":"Layui","slug":"Layui","permalink":"http://xiayunhu.github.io/tags/Layui/"}]},{"title":"Next主题","slug":"Next主题","date":"2018-11-12T16:00:00.000Z","updated":"2018-11-13T06:24:22.885Z","comments":true,"path":"Hexo/Next主题/","link":"","permalink":"http://xiayunhu.github.io/Hexo/Next主题/","excerpt":"","text":"安装Next主题进入myblog文件夹中，在空白处右键打开Git Bash Here，输入命令1git clone https://github.com/theme-next/hexo-theme-next themes/next等待一会，如果没有报错，就证明Next主题已经安装好了。此时还不能访问Next主题需要下面的配置在myblog文件夹下面可以看到一个_config.yml文件，（在接下来的文章里我们都称为它站点配置文件）。右键选择用Notepad++打开（建议），在里面找到1theme: landscape然后你将里面的landscape改成next1theme: next此时，就可以和上面讲述的验证是否安装成功步骤一样，查看时候更改主题成功。在myblog文件夹里打开Git Bash Here对话框，依次输入以下命令1hexo clean等待完成后再输入1hexo g再输入1hexo s #如果端口不对，如上边一样用5000端口然后等待启动，然后打开浏览器，输入http://localhost:4000。就可以看到是否主题更改成功","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://xiayunhu.github.io/categories/Hexo/"}],"tags":[{"name":"Next","slug":"Next","permalink":"http://xiayunhu.github.io/tags/Next/"}]},{"title":"Hexo框架+GitHub搭建My Blog","slug":"Hexo+GitHub搭建博客","date":"2018-11-08T16:00:00.000Z","updated":"2018-11-20T06:06:13.027Z","comments":true,"path":"Hexo/Hexo+GitHub搭建博客/","link":"","permalink":"http://xiayunhu.github.io/Hexo/Hexo+GitHub搭建博客/","excerpt":"","text":"前言思来想去，还是决定记录下我搭建的这个Blog的所有流程，这也算是我的处子作啦。首先要对Hexo表示感谢。我是Windows的系统，所以本文讲的都是在本系统中是如何搭建的。即将毕业的我，突然感觉该需要一个东西来记录下我的所学所想。大概拖拖拉拉的用了好多天才最后搭建好,主要是提高下自己的功力。 下面我将分步详细介绍如何用Hexo和GitHubPages来搭建Blog。个人能力有限，以下流程有什么不懂的或者有好的知识与我分享欢迎联系我，大家共同进步。 What is HexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。出自台湾大学生 tommy351 之手。是一个基于Node.js的静态博客程序。另外还有一个好处：使用 Hexo + GitHub 搭建博客不需要购买域名和服务器，由 Github 提供域名和网站页面空间。支持多种框架主题，我选择的是Next主题，简约。 What is GitHubGitHub 是一个面向开源及私有 软件项目的托管平台，因为只支持 Git 作为唯一的版本库格式进行托管。有足够的免费空间（1G），自己管理资料，保存可靠。2018年10月19日，欧盟正式无条件批准了微软以75亿美元收购GitHub。 搭建前准备工作 Hexo官方文档&nbsp;&nbsp;（具体对hexo有什么问题可以查看文档） Git&nbsp;&nbsp;（点进去可直接下载最新版本，具体的安装流程） Node.js&nbsp;&nbsp;（选个最新的下载就好，具体安装流程） Next主题官网&nbsp;&nbsp;（一些配置讲解的还是比较详细） 其他的一些主题可供参考&nbsp;&nbsp;（根据自己的喜好风格，选择自己的主题） Notepad++（我用的是这个来编写Markdown文章的，如果文章出现乱码，可以用记事本打开另存为，然后选择UTF-8编码就好了） 开始搭建说了那么多，准备工作也可以了，现在撸起袖子干吧！ 安装环境依赖（Git and Node.js）首先把前面说的Git和Node.js安装到电脑上（Windows系统），教程也有，对于聪明的你来说，不会难倒你。这是我们搭建博客基层的软件。以下所有的命令输入都是在Git软件里面进行的。 安装Hexo在你安装好Git软件后，你可以在电脑空白地方或者桌面上右击鼠标，就会看到Git GUI Here和Git Bash Here，然后在你想把博客源文件放的电脑哪个位置，在里面创建个文件夹用于保存Hexo生成的博客内容（文件夹名可为myblog）。然后进入该文件夹，空白位置右击，然后点击Git Bash Here ，在里面输入：1npm install -g hexo-cli接着输入hexo -v然后输出以下内容就表示安装成功了（结果有可能不一样因为版本问题，但不影响使用）12345678910111213$ hexo -vhexo: 3.7.1hexo-cli: 1.1.0os: Windows_NT 10.0.10240 win32 x64http_parser: 2.7.0node: 7.0.0v8: 5.4.500.36uv: 1.9.1zlib: 1.2.8ares: 1.10.1-DEVicu: 57.1modules: 51openssl: 1.0.2j如果没有报错，就表示安装成功了。接下来继续输入：1hexo init # 初始化组件回车后npm就会自动安装博客所需的组件了，你要做的就是等待，等全部安装完就可以了。这时你就看到文件夹里会出现以下目录结构：1234567├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes验证以下hexo是否安装成功，还是在这个文件夹里右击找到Git Bash Here在里面输入命令1hexo g等待加载完然后在输入命令1hexo s出现这种样式，就启动成功了12INFO Start processingINFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.然后打开你的浏览器，在网址栏里输入http://localhost:4000（默认端口为4000）。就会看到博客的原始状态，也就证明安装成功了如下图所示： 注意：有可能会发生这种情况，hexo安装没错，也能成功运行，启动也可以，就是不能访问。原因是：那是你的电脑端口被占用了，hexo默认的端口是4000，你应该换个端口运行，可换成hexo s -p 5000就可以访问了。运行成功后，就在刚刚的Git Bash Here对话框中按键盘上的Ctrl+c停止服务，浏览器就不能浏览了。到此整个hexo搭建的博客结束了。此时感觉自己小有成就感。 部署到GitHub首先你需要创建一个Github：https://github.com/账号。在你注册时，一定要记住你使用的注册的邮箱，GitHub大多数都是通过邮箱发送消息的。申请成功后，会有邮箱通知，验证下就可以了。 创建代码仓库这时用我们自己的GitHub用户名建立仓库，http://username.github.io这样的用户或访问站点，每个用户名只能建立一个。首先，在保证登录的情况下，我们点击右上角的+号，点击New repository,新建一个仓库 进入后，在Repositoty name输入框里填写自己的用户名.github.io。例如我的用户名为xiayunhu，则填写xiayunhu.github.io 随后选择Setting进入设置，找到Github Pages如下： 然后我们需要任意选择一个主题，点击Choose a theme，然后选择好后，页面会跳转到仓库里如图所示： 此时你再打开Setting，我们会看到你开启了GitHub Pages之后得到的域名如下： 现在你可以使用https://UserName.github.io，访问自己的博客网站了。关于更多Github的使用和介绍，大家可以去菜鸟教程上或者百度自行了解。 配置SSH本地博客和Github都做好了，接下来我们如何将本地Git项目和Github连接起来？就是用SSH。还是在博客文件夹里右击打开Git Bash Here输入以下命令1ssh -T git@github.com如图所示： 输入命令回车，然后你会看到这样的反馈1The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established. RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48. Are you sure you want to continue connecting (yes/no)?直接在后面输入yes再回车，看到下面的图的结果，就证明配置成功了。 注意，问题来了哦，当你输入yes后，有可能会提示如下信息因为大多数的情况是github账号没有添加ssh公钥信息，这是打开GitHub网站，在确保登录的情况下，找到网站的右上角找到Settings 点进去，在左边找到SSH and GPG keys后，点进去右上角找到New SSH key点进去后如下图所示： 如图片中的key提示，我们要原样复制~/.ssh/id_rsa.pub文件的内容。如果没有该文件在Git Bash Here里输入以下命令1ssh-keygen -t rsa然后一直回车结束，然后在C盘的C:\\Users\\Administrator.ssh里找到id_rsa.pub文件，用记事本打开，Ctrl+A -&gt; Ctrl+C在New SSH key里面Ctrl+V粘贴，点击Add SSh key保存就可以了。最后再输入1ssh -T git@github.com回车就OK了。 将本地文件部署到GitHub在把本地仓库传到github上去之前，还需要设置username和email，因为github每次commit都会记录他们。12$ git config --global user.name &quot;your name&quot; #仓库的名字$ git config --global user.email &quot;your_email@youremail.com&quot; #你的邮箱设置完后，我们每次使用hexo d命令时就不用每次都输入密码了。接下来我们就要修改hexo中的_config.yml文件（也就是站点配置文件）如下图所示: 找到文件里面的deploy标签，改成如下列所示，Ctrl+S保存，此时要注意，冒号后边都要加上一个空格，否则会报错的。1234deploy: type: git repo: git@github.com:xiayunhu/xiayunhu.github.io.git branch: master然后在文件夹里运行Git Bash Here输入以下命令1npm install hexo-deployer-git --save再依次输入123hexo cleanhexo generate #可简写hexo ghexo deploy #可简写hexo d出现以下提示 那么恭喜你，个人博客已经部署到GitHub上了。你可以去你的GitHub仓库查看是否有信息，稍微等待一下就可以访问http://your_user_name.github.io（your_user_name也就是你的仓库名字），此时你就可以看到你的个人博客了。 将自己的域名和GitHub Pages的空间绑定我们现在可以通过本地浏览或者GitHub Pages提供的域名访问了，但总感觉不是自己的东西，于是我就自己申请了一个域名，来浏览自己的博客，这样在介绍自己的博客的时候，明显的高大尚许多。我是在腾讯云的网站上申请的，需要备案（比较麻烦，需要半个多月），你也可以在阿里云上申请或者其他的地方购买，应该不腾讯云快，我介绍的是腾讯云上申请的域名。 申请域名此时要注意的是：不需要购买服务器进入到腾讯云的官网,在产品一栏，找到域名注册，这样就可以注册了，不同的域名价格不一，自行找个好记得就好。 具体备案，根据里面的流程自行备案。等备案好，然后对域名进行解析： 点击添加解析，记录类型选A或CNAME，A记录的记录值就是ip地址，github(官方文档)提供了两个IP地址，192.30.252.153和192.30.252.154，这两个IP地址为github的服务器地址，两个都要填上，解析记录设置两个www和@，线路就默认就行了，CNAME记录值填你的github博客网址。如我的是xiayunhu.github.io。 这些全部设置完成后，此时你并不能要申请的域名访问你的博客。接着你需要做的是在hexo根目录的source文件夹里创建CNAME文件，不带任何后缀，里面添加你的域名信息，如：www.xyhwh.com。注意搭建完成访问出现404 ：你认为配置没有问题，那么可能只是你的浏览器在捣鬼，可尝试清除浏览器缓存再访问或者换个浏览器访问。应该就解决了。 GitHub Pages里配置域名进入GitHub，然后找到Settings如下图所示： 然后往下找，找到GitHub Pages一栏如图所示： 这样整个用Hexo+GitHub搭建的博客到现在就搭建完成了。 后记以上所述，就是搭上建博客的全部流程，如果你有什么问题或者文章有错的地方，欢迎在下面留言。具体的主题配置，将会在下节详细介绍。 参考的资料： Hexo中文文档 Next主题使用文档 感谢：","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://xiayunhu.github.io/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://xiayunhu.github.io/tags/Hexo/"}]},{"title":"SpringBoot+Maven框架搭建","slug":"SpringBoot+Maven框架搭建","date":"2018-11-07T16:00:00.000Z","updated":"2018-11-09T01:31:13.748Z","comments":true,"path":"Java/SpringBoot+Maven框架搭建/","link":"","permalink":"http://xiayunhu.github.io/Java/SpringBoot+Maven框架搭建/","excerpt":"","text":"","categories":[{"name":"Java","slug":"Java","permalink":"http://xiayunhu.github.io/categories/Java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://xiayunhu.github.io/tags/Java/"}]},{"title":"小小语录","slug":"shi","date":"2018-09-15T14:22:07.000Z","updated":"2019-04-04T05:52:56.777Z","comments":true,"path":"小故事/shi/","link":"","permalink":"http://xiayunhu.github.io/小故事/shi/","excerpt":"","text":"1. 星光不问赶路人，时光不负有心人。你尽管踏实下来，一步一步往前走，何时抵达只是时间问题。 2. 如果有来生，要做一棵树，站成永恒，没有悲欢的姿势。一半在土里安详，一半在风里飞扬，一半洒落阴凉，一半沐浴阳光，非常沉默非常骄傲，从不依靠从不寻找。- - - - - -三毛 每个人都要有一个梦想，万一实现了呢？而我呢，却有很多梦想，全面撒网，重点培养。 所谓的梦想，都是自己在某一天，某一个地点，发生了某些事情，灵光一闪，就想拥有他或是去实现他。 那些萌生的梦想就是自己的目标，如果不实现，我就会觉得留下了人生的遗憾，每一件事我都在努力的去做， 但是仍然会有遗憾留下，那是自己真正的无能为力，只要有点希望，我又何尝不去争取呢！ 某一 天我想做一件事，却发现自己无能为力，那不仅仅是痛苦，留下的遗憾可能为一生都无法去弥补， 所以我一直在尽可能的去努力，坚持不放弃每一件事，有时候走了偏路，没有人会提醒，甚至没有走回去的 机会， 这样的遗憾会是多么的不甘心。 给自己一个梦想，给自己一个目标，有个努力的方向，我不会放弃，我只能坚持到底。","categories":[{"name":"小故事","slug":"小故事","permalink":"http://xiayunhu.github.io/categories/小故事/"}],"tags":[{"name":"Me","slug":"Me","permalink":"http://xiayunhu.github.io/tags/Me/"}]},{"title":"斯人若彩虹,遇上方知有","slug":"first","date":"2018-09-05T15:22:07.000Z","updated":"2018-11-08T02:09:08.250Z","comments":true,"path":"小故事/first/","link":"","permalink":"http://xiayunhu.github.io/小故事/first/","excerpt":"","text":"一.写博客的经历从上大学开始，慢慢的接触到了一些新鲜的东西，毕竟是学的软件专业，当时就感觉如果有一个自己的网站，是多么的牛。然后脑子里就有一些想法，可能是技术的原因，一直拖着，偶尔也想想就是不知从哪下手。 经历了大一的时光，心中还是有对自己网站的向往，当时也稍微懂点技术上的问题了，可感觉还是技术不够。又开始拖着。直到大二结束的暑假。我在偶然的机会在公众号里看到一位大神写的文章，名叫：程序员为什么要写博客？我认真的看了一遍，说的特别好，尤其是到了用什么搭建的博客。 第一次听到hexo这个词，我当时看到就感觉，哇，肯定很难，我能做出来吗？我该怎么做？适合我吗？一系列的问题，想找人问，想了一遍认识的好友里，最后还是放弃了。然后找到了度娘（百度），打开网页的那一刻，太惊喜了，哇，原来有那么详细的教程，Hexo+github从零开始搭建博客。我心里就认定了，就是这个了。 二.为什么要写博客？为什么要写自己的博客，刚开始我心里也有疑问，从有打算到开始动手做，拖拖拉拉的两年了。后来学的东西越来越多，自己经常百度，几乎搜到的东西好多都是别人博客里写的，我知道最多的就是，CSDN、博客园、简书等。我也比较喜欢写一些东西。想创建博客不是为了以后有多少多少粉丝，想出名等，而是想把自己的一些东西记录下来，总结的工作经验以及一些自己的心得，有幸可以和大家一起分享。","categories":[{"name":"小故事","slug":"小故事","permalink":"http://xiayunhu.github.io/categories/小故事/"}],"tags":[{"name":"Me","slug":"Me","permalink":"http://xiayunhu.github.io/tags/Me/"}]}]}