{"meta":{"title":"xyh's Blog","subtitle":"何以解忧，唯有代码","description":"前端 java PHP 分享 博客","author":"XYH","url":"http://xiayunhu.github.io"},"pages":[{"title":"404-找不到页面","date":"2018-10-10T13:26:33.000Z","updated":"2018-10-16T02:58:06.000Z","comments":false,"path":"/404.html","permalink":"http://xiayunhu.github.io//404.html","excerpt":"","text":"404 Not Found&lt;!DOCTYPE HTML&gt;"},{"title":"自我简介","date":"2018-10-10T05:16:06.000Z","updated":"2019-05-10T02:08:30.734Z","comments":false,"path":"about/index.html","permalink":"http://xiayunhu.github.io/about/index.html","excerpt":"","text":"关于我&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;姓名： XYH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;性别： 男&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;座右铭： 何以解忧，唯有代码。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;自我认识： 一个走向全栈的呆萌小菜鸟&nbsp;&nbsp;&nbsp;(ノ◕ω◕)ノ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;深藏武林绝学： 熟悉Html/CSS和JavaScript、手持bootStrap、layui框架，PHP开发，但对Java特别感兴趣,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;迫切希望进阶成小鸟。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;修炼社区：知乎、微博、CSDN、GitHub&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;休闲：听歌、看电影、养花、旅游。联系我来自一只菜鸟的邀请，欢迎和我一起分享知识。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;邮箱：2390472338@qq.com&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;QQ：2390472338&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;微信公众号：码上言"},{"title":"archives","date":"2018-10-10T05:19:03.000Z","updated":"2018-11-08T01:56:26.597Z","comments":false,"path":"archives/index.html","permalink":"http://xiayunhu.github.io/archives/index.html","excerpt":"","text":""},{"title":"文章分类","date":"2018-10-10T05:15:03.000Z","updated":"2018-11-08T01:56:33.619Z","comments":false,"path":"categories/index.html","permalink":"http://xiayunhu.github.io/categories/index.html","excerpt":"","text":"目 前 共 计 5 个 分 类"},{"title":"标签","date":"2018-10-10T05:06:14.000Z","updated":"2018-11-08T02:00:21.409Z","comments":false,"path":"tags/index.html","permalink":"http://xiayunhu.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Vue表单（十二）","slug":"Vue表单（十二）","date":"2019-10-21T16:00:00.000Z","updated":"2019-10-23T06:28:39.126Z","comments":true,"path":"Vue/Vue表单（十二）/","link":"","permalink":"http://xiayunhu.github.io/Vue/Vue表单（十二）/","excerpt":"","text":"表单基础语法你可以用 v-model 指令在表单 input、textarea 及 select元素上创建双向数据绑定。 它会根据控件类型自动选取正确的方法来更新元素。尽管有些神奇，但 v-model 本质上不过是语法糖。它负责监听用户的输入事件以更新数据，并对一些极端场景进行一些特殊处理。以下实例中演示了 input 和 textarea 元素中使用 v-model 实现双向数据绑定： 复选框（v-model=”checked”）复选框如果是一个为逻辑值，如果是多个则绑定到同一个数组：下列例子是复选框的双向数据绑定： 单选按钮（v-model=”checked”）单选按钮的双向数据绑定： 选择框1、单选框（v-model=”selected”）：注意：如果 v-model 表达式的初始值未能匹配任何选项，select元素将被渲染为“未选中”状态。在 iOS 中，这会使用户无法选择第一个选项。因为这样的情况下，iOS 不会触发 change 事件。因此，更推荐像上面这样提供一个值为空的禁用选项。2、多选框（绑定到一个数组）： 修饰符1、.lazy在默认情况下， v-model 在 input 事件中同步输入框的值与数据，但你可以添加一个修饰符 lazy ，从而转变为在 change 事件中同步：12&lt;!-- 在 &quot;change&quot; 而不是 &quot;input&quot; 事件中更新 --&gt;&lt;input v-model.lazy=&quot;msg&quot; &gt;2、.number如果想自动将用户的输入值转为数值类型，可以给 v-model 添加 number 修饰符：12&lt;!-- 在 &quot;change&quot; 而不是 &quot;input&quot; 事件中更新 --&gt;&lt;input v-model.lazy=&quot;msg&quot; &gt;这通常很有用，因为即使在 type=”number” 时，HTML 输入元素的值也总会返回字符串。如果这个值无法被 parseFloat() 解析，则会返回原始的值。3、.trim如果要自动过滤用户输入的首尾空白字符，可以给 v-model 添加 trim 修饰符：1&lt;input v-model.trim=&quot;msg&quot;&gt; 结束","categories":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/tags/Vue/"}]},{"title":"Vue事件处理器（十一）","slug":"Vue事件处理器（十一）","date":"2019-10-20T16:00:00.000Z","updated":"2019-10-22T08:23:12.638Z","comments":true,"path":"Vue/Vue事件处理器（十一）/","link":"","permalink":"http://xiayunhu.github.io/Vue/Vue事件处理器（十一）/","excerpt":"","text":"Vue.js 事件处理器v-on指令监听事件可以用v-on 指令监听 DOM 事件例如以下代码：在许多的情况下，事件处理逻辑会更为复杂，所以直接把 JavaScript 代码写在 v-on 指令中是不可行的。因此 v-on还可以 接收一个需要调用的方法名称。例如以下代码： 内联处理器中的方法除了直接绑定到一个方法，也可以在内联 JavaScript 语句中调用方法：1234&lt;div id=&quot;example-3&quot;&gt; &lt;button v-on:click=&quot;say(&apos;hi&apos;)&quot;&gt;Say hi&lt;/button&gt; &lt;button v-on:click=&quot;say(&apos;what&apos;)&quot;&gt;Say what&lt;/button&gt;&lt;/div&gt;12345678new Vue(&#123; el: &apos;#example-3&apos;, methods: &#123; say: function (message) &#123; alert(message) &#125; &#125;&#125;) 事件修饰符在事件处理程序中调用 event.preventDefault() 或 event.stopPropagation() 是非常常见的需求。尽管我们可以在方法 中轻松实现这点，但更好的方式是：方法只有纯粹的数据逻辑，而不是去处理 DOM 事件细节。为了解决这个问题，Vue.js 为 v-on 提供了事件修饰符。之前提过，修饰符是由点开头的指令后缀来表示的。 .stop .prevent .capture .self .once .passive 12345678910111213141516171819&lt;!-- 阻止单击事件继续传播 --&gt;&lt;a v-on:click.stop=&quot;doThis&quot;&gt;&lt;/a&gt;&lt;!-- 提交事件不再重载页面 --&gt;&lt;form v-on:submit.prevent=&quot;onSubmit&quot;&gt;&lt;/form&gt;&lt;!-- 修饰符可以串联 --&gt;&lt;a v-on:click.stop.prevent=&quot;doThat&quot;&gt;&lt;/a&gt;&lt;!-- 只有修饰符 --&gt;&lt;form v-on:submit.prevent&gt;&lt;/form&gt;&lt;!-- 添加事件监听器时使用事件捕获模式 --&gt;&lt;!-- 即元素自身触发的事件先在此处理，然后才交由内部元素进行处理 --&gt;&lt;div v-on:click.capture=&quot;doThis&quot;&gt;...&lt;/div&gt;&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;&lt;!-- 即事件不是从内部元素触发的 --&gt;&lt;div v-on:click.self=&quot;doThat&quot;&gt;...&lt;/div&gt; 注意：不要把 .passive 和 .prevent 一起使用，因为 .prevent 将会被忽略，同时浏览器可能会向你展示一个警告。请记住，.passive 会告诉浏览器你不想阻止事件的默认行为。 按键修饰符在监听键盘事件时，我们经常需要检查常见的键值。Vue 允许为 v-on 在监听键盘事件时添加按键修饰符：12&lt;!-- 只有在 `keyCode` 是 13 时调用 `vm.submit()` --&gt;&lt;input v-on:keyup.13=&quot;submit&quot;&gt;记住所有的 keyCode 比较困难，所以 Vue 为最常用的按键提供了别名：12345&lt;!-- 同上 --&gt;&lt;input v-on:keyup.enter=&quot;submit&quot;&gt;&lt;!-- 缩写语法 --&gt;&lt;input @keyup.enter=&quot;submit&quot;&gt; 全部的按键别名： .enter .tab .delete (捕获 “删除” 和 “退格” 键) .esc .space .up .down .left .right .ctrl .alt .shift .meta 可以通过全局 config.keyCodes 对象自定义按键修饰符别名：1234&lt;p&gt;&lt;!-- Alt + C --&gt;&lt;input @keyup.alt.67=&quot;clear&quot;&gt;&lt;!-- Ctrl + Click --&gt;&lt;div @click.ctrl=&quot;doSomething&quot;&gt;Do something&lt;/div&gt; 自动匹配按键修饰符（2.5.0 新增）你也可直接将 KeyboardEvent.key 暴露的任意有效按键名转换为 kebab-case 来作为修饰符：1&lt;input @keyup.page-down=&quot;onPageDown&quot;&gt;在上面的例子中，处理函数仅在 $event.key === ‘PageDown’ 时被调用。","categories":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/tags/Vue/"}]},{"title":"Vue样式绑定（十）","slug":"Vue样式绑定（十）","date":"2019-09-10T16:00:00.000Z","updated":"2019-10-21T02:33:12.285Z","comments":true,"path":"Vue/Vue样式绑定（十）/","link":"","permalink":"http://xiayunhu.github.io/Vue/Vue样式绑定（十）/","excerpt":"","text":"Vue.js 样式绑定操作元素的 class 列表和内联样式是数据绑定的一个常见需求。因为它们都是属性，所以我们可以用 v-bind 处理它们： 只需要通过表达式计算出字符串结果即可。在将 v-bind 用于 class 和 style 时，Vue.js 做了专门的增强。 表达式结果的类型除了字符串之外，还可以是对象或数组。 绑定 HTML Class我们可以为 v-bind:class 设置一个对象，从而动态的切换 class:例1、将 isActive 设置为 true 显示了一个绿色的 div 块，如果设置为 false 则不显示：以上的例子div的class为active。1&lt;div class=&quot;active&quot;&gt;&lt;/div&gt;你可以在对象中传入更多属性来动态切换多个 class。此外，v-bind:class 指令也可以与普通的 class 属性共存。当 isActive 或者 hasError 变化时，class 列表将相应地更新。例如，如果 hasError 的值为 true，class 列表将变为 “static active text-danger”。 我们也可以在这里绑定一个返回对象的计算属性。这是一个常用且强大的模式： 数组语法我们可以把一个数组传给 v-bind:class，以应用一个 class 列表：渲染为：1&lt;div class=&quot;active text-danger&quot;&gt;&lt;/div&gt;如果你也想根据条件切换列表中的 class，可以用三元表达式： 绑定内联样式1、v-bind:style 的对象语法十分直观——看着非常像 CSS，但其实是一个 JavaScript 对象。CSS 属性名可以用驼峰式 (camelCase) 或短横线分隔 (kebab-case，记得用单引号括起来) 来命名：123&lt;div id=&quot;app&quot;&gt; &lt;div v-bind:style=&quot;&#123; color: activeColor, fontSize: fontSize + &apos;px&apos; &#125;&quot;&gt;xyh&lt;/div&gt;&lt;/div&gt;我们可以在 v-bind:style 直接设置样式：2、或者直接绑定到一个样式对象通常更好，这会让模板更清晰：1&lt;div v-bind:style=&quot;styleObject&quot;&gt;&lt;/div&gt; 3、v-bind:style 的数组语法可以将多个样式对象应用到同一个元素上：1&lt;div v-bind:style=&quot;[baseStyles, overridingStyles]&quot;&gt;&lt;/div&gt; 自动添加前缀当 v-bind:style 使用需要添加浏览器引擎前缀的 CSS 属性时，如 transform，Vue.js 会自动侦测并添加相应的前缀。","categories":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/tags/Vue/"}]},{"title":"Vue监听属性（九）","slug":"Vue监听属性（九）","date":"2019-09-09T16:00:00.000Z","updated":"2019-10-21T02:32:47.471Z","comments":true,"path":"Vue/Vue监听属性（九）/","link":"","permalink":"http://xiayunhu.github.io/Vue/Vue监听属性（九）/","excerpt":"","text":"Vue监听属性watchVue.js 监听属性 watch，我们可以通过 watch 来响应数据的变化实例1、通过使用 watch 实现计数器：展示页面效果如下： 实例2、了解了一些基本的用法，我们来写一个简单的购物车。总共分为三个部分来写，一个是前端的页面展示、CSS样式美化以及Vue的数据绑定。（1）前端Html页面由于代码中带有双括号，网站会出现错误，所以我这里全部用代码截图展示。如果想要源码的话，可以加我好友，或者关注我微信公众号，查找源码。 （2）CSS样式处理 （3）Vue数据处理 展示的页面效果如下： 总结当需要在数据变化时执行异步或开销较大的操作时，这个方式是最有用的。","categories":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/tags/Vue/"}]},{"title":"Vue计算属性（八）","slug":"Vue计算属性（八）","date":"2019-09-01T16:00:00.000Z","updated":"2019-10-21T02:32:17.429Z","comments":true,"path":"Vue/Vue计算属性（八）/","link":"","permalink":"http://xiayunhu.github.io/Vue/Vue计算属性（八）/","excerpt":"","text":"Vue.js 计算属性computed计算属性关键词: computed，对于任何复杂逻辑，你都应当使用计算属性。接下来我们看看计算属性的实例 computed settercomputed 属性默认只有 getter ，不过在需要时你也可以提供一个 setter 从实例运行结果看在运行 vm.site = ‘http://www.xyhwh.cn&#39;; 时，setter 会被调用， vm.name 和 vm.url 也会被对应更新。","categories":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/tags/Vue/"}]},{"title":"Vue条件渲染（七）","slug":"Vue条件渲染（七）","date":"2019-08-14T16:00:00.000Z","updated":"2019-10-21T02:31:46.019Z","comments":true,"path":"Vue/Vue条件渲染（七）/","link":"","permalink":"http://xiayunhu.github.io/Vue/Vue条件渲染（七）/","excerpt":"","text":"条件渲染v-if指令v-if 指令用于条件性地渲染一块内容。这块内容只会在指令的表达式返回 truthy 值的时候被渲染。也可以用 v-else 添加一个“else 块”： v-else你可以使用 v-else 指令来表示 v-if 的“else 块”：v-else 元素必须紧跟在带 v-if 或者 v-else-if 的元素的后面，否则它将不会被识别。 v-else-if（2.1.0 新增）v-else-if，顾名思义，充当 v-if 的“else-if 块”，可以连续使用类似于 v-else，v-else-if 也必须紧跟在带 v-if 或者 v-else-if 的元素之后。 v-show另一个用于根据条件展示元素的选项是 v-show 指令。用法大致一样不同的是带有 v-show 的元素始终会被渲染并保留在 DOM 中。v-show 只是简单地切换元素的 CSS 属性 display。 总结条件渲染我就介绍这两种，一个是v-if，另一个是v-show。如果想要多了解的话，可以在vue.js官网上查看相关技术文档。","categories":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/tags/Vue/"}]},{"title":"Vue循环语句（六）","slug":"Vue循环语句（六）","date":"2019-08-13T16:00:00.000Z","updated":"2019-10-21T02:31:00.882Z","comments":true,"path":"Vue/Vue循环语句（六）/","link":"","permalink":"http://xiayunhu.github.io/Vue/Vue循环语句（六）/","excerpt":"","text":"循环语句v-for指令我们可以用 v-for 指令基于一个数组来渲染一个列表。v-for 指令需要使用 item in items 形式的特殊语法，其中items 是源数据数组，而 item 则是被迭代的数组元素的别名。例如：我们把绑定的数据到数组，放到表格中把数据循环展现出来。 v-for 迭代对象v-for 可以通过一个对象的属性来迭代数据在 v-for 块中，我们可以访问所有父作用域的属性。v-for 还支持一个可选的第二个参数，即当前项的索引。你也可以用 of 替代 in 作为分隔符，因为它更接近 JavaScript 迭代器的语法：1&lt;div v-for=&quot;item of items&quot;&gt;&lt;/div&gt; 第二参数可以提供第二个的参数为 property 名称 (也就是键名)。 第三参数还可以用第三个参数作为索引。 在 v-for 里使用值范围v-for 也可以接受整数。在这种情况下，它会把模板重复对应次数。 在组件上使用 v-for在自定义组件上，你可以像在任何普通元素上一样使用 v-for 。1&lt;my-component v-for=&quot;item in items&quot; :key=&quot;item.id&quot;&gt;&lt;/my-component&gt;2.2.0+ 的版本里，当在组件上使用 v-for 时，key 现在是必须的。 总结今天就学到这了，循环是每个语言最重要的部分之一了，还是要好好的花时间研究的。","categories":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/tags/Vue/"}]},{"title":"Vue条件语句（五）","slug":"Vue条件语句（五）","date":"2019-08-12T16:00:00.000Z","updated":"2019-10-21T02:29:01.607Z","comments":true,"path":"Vue/Vue条件语句（五）/","link":"","permalink":"http://xiayunhu.github.io/Vue/Vue条件语句（五）/","excerpt":"","text":"条件语句v-ifv-if 指令用于条件性地渲染一块内容。这块内容只会在指令的表达式返回 true值的时候被渲染。这里的v-if 指令将根据表达式 wh 的值(true 或 false )来决定是否插入 p 元素。把一个 “template”元素当做不可见的包裹元素，并在上面使用 v-if。最终的渲染结果将不包含 “template” 元素 。 v-else可以用 v-else 指令给 v-if 添加一个 “else” 块举个例子：随机生成一个数字，判断是否大于0.5，然后输出对应信息。 v-else-if (2.1.0 新增)v-else-if，顾名思义，充当 v-if 的”else-if 块”，可以连续使用类似于 v-else，v-else-if 也必须紧跟在带 v-if 或者 v-else-if 的元素之后。 v-show根据条件展示元素的选项是 v-show 指令不同的是带有 v-show 的元素始终会被渲染并保留在 DOM 中。v-show 只是简单地切换元素的 CSS 属性 display。注意：v-show 不支持 元素，也不支持 v-else。 v-if 对比 v-show1、v-if 是“真正”的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。2、v-if 也是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。3、相比之下，v-show 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 进行切换。4、一般来说，v-if 有更高的切换开销，而 v-show 有更高的初始渲染开销。因此，如果需要非常频繁地切换，则使用 v-show 较好；如果在运行时条件很少改变，则使用 v-if 较好。 v-if 与 v-for 一起使用首先是不推荐这样使用的，当 v-if 与 v-for 一起使用时，v-for 具有比 v-if 更高的优先级。 总结条件语句在我们平时做项目的时候用到的非常多的，所以还是要好好研究透，多多练习。","categories":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/tags/Vue/"}]},{"title":"Vue模板语法（四）","slug":"Vue模板语法（四）","date":"2019-08-11T16:00:00.000Z","updated":"2019-10-21T02:28:09.445Z","comments":true,"path":"Vue/Vue模板语法（四）/","link":"","permalink":"http://xiayunhu.github.io/Vue/Vue模板语法（四）/","excerpt":"","text":"Vue的模板语法接着昨天的继续学习模板语法。 动态参数（2.6.0 新增）从 2.6.0 开始，可以用方括号括起来的 JavaScript 表达式作为一个指令的参数1&quot;&lt;a v-bind:[attributeName]=&quot;url&quot;&gt; ... &lt;/a&gt; &quot;这里的 attributeName 会被作为一个 JavaScript 表达式进行动态求值，求得的值将会作为最终的参数来使用。例如，如果你的 Vue 实例有一个 data 属性 attributeName，其值为 “href”，那么这个绑定将等价于 v-bind:href。同样地，你可以使用动态参数为一个动态的事件名绑定处理函数：1&quot;&lt;a v-on:[eventName]=&quot;doSomething&quot;&gt; ... &lt;/a&gt; &quot;同样地，当 eventName 的值为 “focus” 时，v-on:[eventName] 将等价于 v-on:focus。 修饰符修饰符 (modifier) 是以半角句号 . 指明的特殊后缀，用于指出一个指令应该以特殊方式绑定。例如，.prevent 修饰符告诉 v-on 指令对于触发的事件调用 event.preventDefault()1&quot;&lt;form v-on:submit.prevent=&quot;onSubmit&quot;&gt;...&lt;/form&gt;&quot; 用户输入在 input 输入框中我们可以使用 v-model 指令来实现双向数据绑定v-model 指令用来在 input、select、textarea、checkbox、radio 等表单控件元素上创建双向数据绑定，根据表单上的值，自动更新绑定的元素的值。按钮的事件我们可以使用 v-on 监听事件，并对用户的输入进行响应。例如：用户点击按钮后对字符串进行反转操作 过滤器（了解）Vue.js 允许你自定义过滤器，被用作一些常见的文本格式化例如：对输入的字符串第一个字母转为大写 缩写v- 前缀作为一种视觉提示，用来识别模板中 Vue 特定的特性。Vue 为 v-bind 和 v-on 这两个最常用的指令，提供了特定简写。 v-bind 缩写1234&lt;!-- 完整语法 --&gt;&lt;a v-bind:href=&quot;url&quot;&gt;&lt;/a&gt;&lt;!-- 缩写 --&gt;&lt;a :href=&quot;url&quot;&gt;&lt;/a&gt; v-on 缩写1234&lt;!-- 完整语法 --&gt;&lt;a v-on:click=&quot;doSomething&quot;&gt;&lt;/a&gt;&lt;!-- 缩写 --&gt;&lt;a @click=&quot;doSomething&quot;&gt;&lt;/a&gt; 总结今天一个学了5个模板语法，同样也是我们学习vue的重点，主要有动态参数（2.6.0 新增）、修饰符、用户输入、过滤器、缩写（v-bind 缩写、v-on 缩写）。","categories":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/tags/Vue/"}]},{"title":"Vue模板语法（三）","slug":"Vue模板语法（三）","date":"2019-08-10T16:00:00.000Z","updated":"2019-10-21T02:26:42.981Z","comments":true,"path":"Vue/Vue模板语法（三）/","link":"","permalink":"http://xiayunhu.github.io/Vue/Vue模板语法（三）/","excerpt":"","text":"Vue的模板语法今天来我们来学习一下Vue的模板语法，Vue.js使用了基于HTML的模板语法，它的核心是一个允许你采用简洁的模板语法来声明式的将数据渲染进 DOM 的系统。在底层的实现上，Vue 将模板编译成虚拟 DOM 渲染函数。结合响应系统，Vue 能够智能地计算出最少需要重新渲染多少组件，并把 DOM 操作次数减到最少。 文本插值 (双大括号)数据绑定最常见的形式就是使用“双大括号”的文本插值 HTML（”v-html”指令）双大括号会将数据解释为普通文本，而非 HTML 代码。为了输出真正的 HTML，你需要使用 “v-html” 指令 特性（”v-bind”指令）HTML 属性中的值应使用 “v-bind” 指令，用一个例子来说明下这个指令。判断 class1 的值，如果为 true 使用 class1 类的样式，否则不使用该类。 使用 JavaScript 表达式实际上，对于所有的数据绑定，Vue.js 都提供了完全的 JavaScript 表达式支持。 指令（”v-if”指令）指令 (Directives) 是带有 v- 前缀的特殊特性。指令的职责是，当表达式的值改变时，将其产生的连带影响，响应式地作用于 DOM。指令特性的值预期是单个 JavaScript 表达式 (“v-for” 是例外情况，以后我们再讨论)。 参数一些指令能够接收一个”参数”，在指令名称之后以冒号表示。例如，”v-bind” 指令可以用于响应式地更新 HTML 特性：另一个是 “v-on” 指令，它用于监听 DOM 事件，在这里参数是监听的事件名。1&quot;&lt;a v-on:click=&quot;doSomething&quot;&gt;&quot; //最外边的双引号要去掉，我这里是网站编译的需要。 总结今天一个学了6个模板语法，这是我们学习vue的重点，主要有双大括号插值、”v-html”指令、”v-bind”指令、JavaScript 表达式、”v-if”指令、还有指令接收”参数”。","categories":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/tags/Vue/"}]},{"title":"Vue介绍（二）","slug":"Vue介绍（二）","date":"2019-08-09T16:00:00.000Z","updated":"2019-10-21T02:25:09.756Z","comments":true,"path":"Vue/Vue介绍（二）/","link":"","permalink":"http://xiayunhu.github.io/Vue/Vue介绍（二）/","excerpt":"","text":"前言由于我们使用vue-cli脚手架搭建的项目学习起来难度比较大，我们放到进阶阶段再学习，我们先用vue包引入来学习vue。 vue.js包1、Staticfile CDN（国内） : https://cdn.staticfile.org/vue/2.2.2/vue.min.js2、unpkg：https://unpkg.com/vue/dist/vue.js3、cdnjs : https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.8/vue.min.js 开始学习vue1、每个 Vue 应用都需要通过实例化 Vue 来实现。123var xyh = new Vue(&#123; // 选项&#125;)2、通过以下的实例我们来分析 参数 说明 el 它是 DOM 元素中的 id，数据改动全部在以上指定的 div 内，div 外部不受影响 data 用于定义属性，下面例子有两个属性分别为：name、url methods 用于定义的函数，可以通过 return 来返回函数值 双括号 用于输出对象属性和函数返回值。 3、当一个 Vue 实例被创建时，它向 Vue 的响应式系统中加入了其 data 对象中能找到的所有的属性。当这些属性的值发生改变时，html视图将也会产生相应的变化。也就是说，无论我们给data对象改变值，还是直接改变属性值，都会改变原始数据。一般来说，除了数据属性，Vue 实例还提供了一些有用的实例属性与方法。它们都有前缀 $，以便与用户定义的属性区分开来。 总结今天先就了解那么多，主要是学习了引用vue.js包、初始化vue、vue中的一些参数和用法。","categories":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/tags/Vue/"}]},{"title":"创建Vue项目（一）","slug":"创建Vue项目（一）","date":"2019-08-08T16:00:00.000Z","updated":"2019-10-21T02:17:54.343Z","comments":true,"path":"Vue/创建Vue项目（一）/","link":"","permalink":"http://xiayunhu.github.io/Vue/创建Vue项目（一）/","excerpt":"","text":"前言最近想着应该好好的学习下vue.js来补充下自己的知识，所以接下来我将会把每天学的东西记录下来，供我们大家一起学习。 创建vue项目1、先全局安装vue-cli1cnpm install --global vue-cli2、创建一个新的项目1vue init webpack xyhVue（你的项目名称）3、紧接着需要一些配置，默认回车就好。4、创建好之后，进入到你的项目文件下，运行项目1234cnpm run dev DONE Compiled successfully in 43557ms 4:24:11 PM I Your application is running here: http://localhost:8080启动成功之后，在浏览器中输入http://localhost:8080 ，输出结果如下图所示： Vue.js 目录结构打开创建好的项目文件，具体结构如下图所示：我们将每个文件的名称及作用进行解析。 文件名称 说明/作用 node_modules npm 加载的项目依赖模块 build 项目搭建(webpack)相关代码 config 配置目录，包括端口号等。初学可以使用默认的 src 这里是我们要开发的目录，基本上要做的事情都在这个目录里。里面包含了几个目录及文件：assets: 放置一些图片，如logo等。components: 目录里面放了一个组件文件，可以不用。App.vue: 项目入口文件，我们也可以直接将组件写这里，而不使用 components 目录。main.js: 项目的核心文件。 static 静态资源目录，如图片、字体等。 test 初始测试目录，可删除 index.html 首页入口文件，你可以添加一些 meta 信息或统计代码等。 package.json 项目配置文件。 package-lock.json 对结合了逻辑树和物理树的一个快照（snapshot），里面有明确的各依赖版本号，实际安装的结构，也有逻辑树的结构 README.md 项目的说明文档，markdown 格式 项目的首页入口我们可以尝试修改下初始化的项目，找到src文件下的components下的HelloWorld.vue.则src/components/HelloWorld.vue1234567891011&lt;script&gt;export default &#123; name: &apos;HelloWorld&apos;, data () &#123; return &#123; msg: &apos;第一个Vue项目创建好啦！！！&apos; &#125; &#125;&#125;&lt;/script&gt;我们修改后，保存，页面会自动刷新。","categories":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/tags/Vue/"}]},{"title":"","slug":"IIS部署php项目","date":"2019-08-07T00:11:00.739Z","updated":"2019-08-08T09:24:52.446Z","comments":true,"path":"uncategorized/IIS部署php项目/","link":"","permalink":"http://xiayunhu.github.io/uncategorized/IIS部署php项目/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Vue项目创建和运行","slug":"vue项目创建和运行","date":"2019-07-05T16:00:00.000Z","updated":"2019-08-08T08:13:11.322Z","comments":true,"path":"Vue/vue项目创建和运行/","link":"","permalink":"http://xiayunhu.github.io/Vue/vue项目创建和运行/","excerpt":"","text":"前言最近我在GitHub上边看到一个Vue和NodeJs项目，感觉还不错，就自己下载运行部署了一下，感觉身为一个前端开发程序员，是要Vue和node.js好好的学习一下，来储备一下自己的知识。 安装node.js首先创建Vue，第一步就要安装NodeJs,因为我们要用到npm。在百度上搜索nodejs进入官网，进行安装包下载。Node.js 安装包及源码下载地址为：https://nodejs.org/en/download/ 重点说一下Windows上安装Node.js根据你电脑的配置，来选择32位还是64位下载：32 位安装包下载地址 : https://nodejs.org/dist/v4.4.3/node-v4.4.3-x86.msi64 位安装包下载地址 : https://nodejs.org/dist/v4.4.3/node-v4.4.3-x64.msi 安装步骤1、打开下载的安装包，双击安装程序，如下图所示：2、点击Run，运行安装。如下图所示：3、 勾选接受协议选项，那个正方形的选择框，点击 next（下一步） 按钮。如下图所示：4、选择你所安装的位置。5、选择好，然后一路next，等待安装的过程。如图所示：6、当出现这样的画面是，就表示安装完成。 配置环境变量检测PATH环境变量是否配置了Node.js，点击开始=》运行=》输入”cmd” =&gt; 输入命令”path”，输出如下结果：123456C:\\Users\\Administrator&gt;pathPATH=C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64_win\\compiler;C:\\WINDOWS\\system32;C:\\Program Files\\nodejs\\;C:\\Users\\Administrator\\AppData\\Roaming\\npm;C:\\Program Files\\nodejs\\npm_global; 测试1、安装好了之后，我们点击开始=》运行=》输入”cmd” =&gt; 输入 node -v 来查看是否安装成功。如图所示：出现这个版本号（版本号不一定和我的一样）就说明安装成功了。2、检查npm管理包，npm是集成在node中的，我们还是在打开cmd中输入 npm -v来查看是否安装成功。如图所示：出现这个版本号（版本号不一定和我的一样）就说明安装成功了。 安装cnpm由于npm有些资源被屏蔽,而且有些是国外资源的原因， 会导致安装依赖的时候失败。这里我们选择安装cnpm国内镜像。输入如下命令：1npm install -g cnpm --registry=http://registry.npm.taobao.org然后等待，进行下一步，如下图所示：安装完，nodejs这一块就完了。 安装Vue这一部分主要是讲述vue的项目创建及运行。 安装vue-cli点击开始=》运行=》输入”cmd” =&gt;右击以管理员身份运行=&gt;输入 cnpm install -g vue-cli ，等待完成。如图所示等待安装好之后，我们就可以创建我们的vue项目了。 创建vue项目还是以管理员身份运行命令提示符（”cmd”），在这里面切换我们要把项目放到哪个盘，打开默认的为C盘。我这里把项目安装到D盘里。输入D：回车就切换到D盘了，例如：C:\\WINDOWS\\system32&gt;D:在当前盘下用vue init webpack firstVue 初始化一个项目：12C:\\WINDOWS\\system32&gt;D:D:\\&gt;vue init webpack xyhVue //回车在安装刚开始的过程中需要手动回车，还要我们填一些选择。根据我这个填就好了。如下图所示：到这里vue项目就创建好了。 安装依赖从命令提示符里面进入创建的项目，然后执行命令 cnpm install ，等待安装，如下图所示：等待安装完成，我们的项目中就会多出来一个文件，就说明安装成功了，如图所示： 运行 Vue项目到此，我们已经做好了所有的准备，现在我们就运行下这个Vue项目，执行npm run dev 运行项目1npm run dev具体如下图所示：等待启动完成，你就可以在浏览器上访问了，默认的为 http://localhost:8080, 如图所示：我们的项目正式搭起来了，接下来我会一点一点的记录我学习Vue的过程的","categories":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://xiayunhu.github.io/tags/Vue/"}]},{"title":"获取图书信息api","slug":"获取图书api","date":"2019-06-21T16:00:00.000Z","updated":"2019-07-06T09:38:52.405Z","comments":true,"path":"接口/获取图书api/","link":"","permalink":"http://xiayunhu.github.io/接口/获取图书api/","excerpt":"","text":"前言最近在做一个图书扫码的藏书的小程序，在调取豆瓣的api时，发现不能调用了，好像是豆瓣的api关闭了。后来找了很久才找到了一个可以用的api。 获取api原本的豆瓣根据条形码编号获取图书的地址为：https://api.douban.com/v2/book/isbn/+条形码号， 现在不可以用了。当你访问这个地址会出现这样一句：1&quot;msg&quot;:&quot;invalid_apikey&quot;,&quot;code&quot;:104,&quot;request&quot;:&quot;GET \\/v2\\/book\\/isbn\\/+条形码号，&quot;所以现在将API基地址改为https://douban.uieee.com ， 这样就可以获取到信息了。例如：https://douban.uieee.com/v2/book/isbn/9787115281609 附上一些文档网址豆瓣图书API文档：https://douban-api-docs.zce.me/book.html豆瓣API文档：http://www.doubanapi.com/1012073文档源文件：https://github.com/zce/douban-api-docs","categories":[{"name":"接口","slug":"接口","permalink":"http://xiayunhu.github.io/categories/接口/"}],"tags":[{"name":"接口","slug":"接口","permalink":"http://xiayunhu.github.io/tags/接口/"}]},{"title":"MySQL笔记","slug":"MySQL笔记","date":"2019-06-05T16:00:00.000Z","updated":"2019-06-11T08:25:45.972Z","comments":true,"path":"MySQL/MySQL笔记/","link":"","permalink":"http://xiayunhu.github.io/MySQL/MySQL笔记/","excerpt":"","text":"1、#2006错误在运行数据库时，没有运行成功，报错信息为：2006 - MySQL server has gone away原因可能是sql语句过长或文件比较大，超过了mysql通信缓存区最大长度。这就需要我们调整mysql的配置文件中max_allowed_packet。解决方法就是在mysql可视化工具里的查询，在里面输入：1SET GLOBAL max_allowed_packet=67108864;点击执行一下就好了。 2、导入数据库错误导入数据库报Result: 1273 - Unknown collation: ‘utf8mb4_0900_ai_ci’错误,原因可能是mysql版本不一致。解决方法： 我们找到数据库的文件，用记事本打开，然后ctrl+f查找如下：123 查找：utf8mb4_0900_ai_ci 全部替换为：utf8_general_ci 123 查找：utf8mb4 全部替换为： utf8 就这样，然后在数据库重新运行一下就导入好了。","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://xiayunhu.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://xiayunhu.github.io/tags/MySQL/"}]},{"title":"CSS设置字体、特殊字体","slug":"CSS设置字体","date":"2019-05-16T16:00:00.000Z","updated":"2019-08-08T08:15:18.838Z","comments":true,"path":"CSS/CSS设置字体/","link":"","permalink":"http://xiayunhu.github.io/CSS/CSS设置字体/","excerpt":"","text":"CSS引入字体我们在Web开发的时候，由于各种需求的不同，有时用的字体也不一样，当我们下载下来的字体，不能安装到自己的电脑上，因为其他人的电脑上不一定有这个字体，所以我们应把字体的文件放到项目文件中，用css来引入这个字体，这样不管电脑上有没有这个字体，都能正常显示。不过要做IE的兼容处理。 获取字体① webfont网站：https://www.webfont.com② dafont网站：https://www.dafont.com我就先介绍这两个吧，根据你的需要，也可在百度搜索。下载的字体文件一般都是后缀为.ttf格式的，然后我们要兼容IE就需要把这个字体再转换成后缀为.woff和.eot的文件，同时引入这三个文件就可以了。转换工具：fontsquirre网站：https://www.fontsquirrel.com 如下图所示：或者fontconverter 网站 css设置字体语法12345678910 &lt;style&gt; @font-face &#123; font-family: &apos;LCD&apos;; src: url(&apos;font/LCD.TTF&apos;); src: url(&apos;font/lcd-webfont.eot&apos;); /* IE9 Compat Modes */ src: url(&apos;font/lcd-webfont.eot?#iefix&apos;) format(&apos;embedded-opentype&apos;); /* 兼容IE6-IE8 */ url(&apos;font/lcd-webfont.woff&apos;) format(&apos;woff&apos;);/* Modern Browsers */ url(&apos;font/LCD.TTF&apos;) format(&apos;truetype&apos;); /* Safari, Android, iOS */&#125; &lt;/style&gt; 以上代码把兼容问题也解决了，一个独特的@font-face语法。 注意 @font-face遵循先定义后使用原则。 一般的字体文件比较大，个人认为，可以用图片字体来代替字体文件。 引入字体文件的路径一定要对，否则会没有效果。","categories":[{"name":"CSS","slug":"CSS","permalink":"http://xiayunhu.github.io/categories/CSS/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://xiayunhu.github.io/tags/CSS/"}]},{"title":"ionic的配置和安装","slug":"ionic的配置和安装","date":"2019-05-05T16:00:00.000Z","updated":"2019-08-08T08:39:02.397Z","comments":true,"path":"移动端/ionic的配置和安装/","link":"","permalink":"http://xiayunhu.github.io/移动端/ionic的配置和安装/","excerpt":"","text":"浅谈ionic 介绍ionic 是一个强大的 HTML5 应用程序开发框架(HTML5 Hybrid Mobile App Framework )。 可以帮助您使用 Web 技术，比如HTML、CSS和Javascript 构建接近原生体验的移动应用程序。ionic是一个轻量的手机UI库，具有速度快，界面现代化、美观等特点。为了解决其他一些UI库在手机上运行缓慢的问题，它直接放弃了IOS6和Android4.1以下的版本支持，来获取更好的使用体验。详情可以去菜鸟教程学习 https://www.runoob.com/ionic/ionic-tutorial.html 特点 ionic 基于Angular语法，简单易学。 ionic 是一个轻量级框架。 ionic 完美的融合下一代移动框架，支持 Angularjs 的特性， MVC ，代码易维护。 ionic 提供了漂亮的设计，通过 SASS 构建应用程序，它提供了很多 UI 组件来帮助开发者开发强大的应用。 ionic 专注原生，让你看不出混合应用和原生的区别 ionic 提供了强大的命令行工具。 ionic 性能优越，运行速度快。 文档 ionic 官方网站：http://ionicframework.com/ionic 官方文档：http://ionicframework.com/docs/ （中文版的文档：http://www.ionic.wang/js_doc-index.html）Github 地址：https://github.com/driftyco/ionic 安装ionic安装ionic有三种方法，接下来我就一个一个的介绍。 第一种直接使用直接使用CDN 库地址，在你的网页头部中直接添加以下两句代码，这样就引入了ionic。 12&lt;link href=&quot;https://cdn.staticfile.org/ionic/1.3.2/css/ionic.css&quot; rel=&quot;stylesheet&quot;&gt;&lt;script src=&quot;https://cdn.staticfile.org/ionic/1.3.2/js/ionic.bundle.min.js&quot;&gt;&lt;/script&gt; 第二种手动引包在ionic官网上下载资源包：http://ionicframework.com/docs/overview/#download。 （目前我还没找到在哪下载的）或者在github上下载 https://github.com/driftyco/ionic （在release 目录中）。接下来，我们只需要在项目中引入以上目录中的 css/ionic.min.css 和 js/ionic.bundle.min.js 文件即可创建 ionic 应用。 第三种命令行安装这个方法比较难点，我花了好长时间才弄好，由于第一次接触中间各种错误，每次还要好长时间来解决。在这个之前你要安装node.js 具体的安装，可查找我前面的文章。这里我就不介绍了，附上下载网址（ http://nodejs.cn/download/ ）在接下来的安装中需要使用到其 NPM 工具，然后通过命令行工具安装最新版本的 cordova 和 ionic。你可以选择在你想要放项目的盘里创建一个文件夹，用来存放ionic文件。接着用控制台（cmd）输入指令安装。windows用户可以在开始搜索cmd直接打开控制台，或者按键盘win键在左下角所有应用里找到windows系统文件里面的命令提示符。 找到之后，右击选择以管理员身份运行。用命令行进入你的文件夹下面安装。补充：如果文件在C盘，先进入C盘cd c:\\,然后在cd 文件名选择下去，如图所示： 然后Window 和 Linux 上执行以下命令： 1$ npm install -g cordova ionic Mac 系统上使用以下命令： 1sudo npm install -g cordova ionic 等待安装下载,过程中不要关闭控制台。下载完成后，在控制台输出ionic -v 查看ionic是否下载完成，完成会出现以下界面： 接下来就是创建运行你的第一个ionic项目 注意:如果安装过程中出现报错，有可能是npm报错，建议卸载nodejs重新安装，在你查看是否下载完成的时候，会出现以下提示： 这个错误添加以下环境变量即可：直接在path加变量值：（D:\\Program Files）你自己的地址\\npm\\node_global，我的就是这个错误，找了好久才找到原因。好了，到此ionic安装结束。接下来我们就创建你的第一个ionic项目。 创建ionic应用切记：命令提示符一定要用管理员权限打开，否则可能由于权限问题导致项目安装运行失败。 之后，我们再次进入到安装ionic的目录下（参照上边补充的命令进入），然后输入要创建的项目名称（自己定义名字）： 1ionic start XyhFirstIonicProject tabs 其中XyhFirstIonicProject是你自己定义的项目名称，tabs是模板，除了tabs模板还有其他balnk等单页，具体可看官方文档。回车等待创建成功。 注意:我在创建的时候遇到了几个错误，我在这列出来。 第一个：错误提示这个应该是你的网络问题，查看下网络是否连接好，关闭命令框再重新打开安装即可。 第二个：错误提示 这个错误就比较头疼了，我找了好久才解决。在你的C盘下找到用户，进去找到你的账户名（我的是：C:\\Users\\Administrator）再进去找到.npmrc文件，用记事本打开，我的打开是这样的： 删除这个淘宝镜像，应该就可以了。在C盘下可能不能直接删，先把文件复制出来，然后删除完在替换下就好了。接下来就可以顺利的创建项目了。 在创建完成之后，你会看到页面上出现了一个提问：1Install the free Ionic Appflow SDK and connect your app? 果断的回答NO，等待创创建成功。如图所示： 到这一步，你的ionic项目就创建完成了。项目里的文件内容： 运行项目在控制台原来的地址（ c:\\Program Files\\nodejs\\npm_global\\node_modules\\ionic）再往下一层进入到创建的项目文件夹下，(输入cd XyhFirstIonicProject)。再输入ionic serve，会得到以下信息：就证明可以浏览了。 页面实现如图所示： 此时整个项目创建加运行就结束了，这就是ionic移动项目了，在此基础上可以开发自己需求了。","categories":[{"name":"移动端","slug":"移动端","permalink":"http://xiayunhu.github.io/categories/移动端/"}],"tags":[{"name":"ionic","slug":"ionic","permalink":"http://xiayunhu.github.io/tags/ionic/"}]},{"title":"从0到1学JavaScript","slug":"JavaScript常用小知识","date":"2019-04-28T16:00:00.000Z","updated":"2019-07-18T08:57:51.165Z","comments":true,"path":"JavaScript/JavaScript常用小知识/","link":"","permalink":"http://xiayunhu.github.io/JavaScript/JavaScript常用小知识/","excerpt":"","text":"JavaScript是区分大小写的语言，关键字、变量、函数名以及所有的标识符都必须采用一致的字符大小写形式。 字符串应用1、获取字符串的长度123456//定义一个字符串var s = &quot;afcsdmf&quot;; //获取字符串的长度var len = s.length;//打印长度console.log(len); 2、获取字符串的最后一个字符 1234 //获取字符串最后一个字符 var last_char = s.charAt(s.length - 1) console.log(last_char); 3、获取字符串第几个字符 1234 //从字符串中选出2,3,4,5个字符,从0开始算 var sub = s.substring(1,5) console.log(sub); 4、查找第一个字母的位置 1234//在字符串中查找第一个字母c的位置,从0开始算var i = s.indexOf(&apos;c&apos;); console.log(i); 对象1、创建对象123456789//创建对象 var o = new Object(); var now = new Date(); //设计对象属性 o.x = 33; o.y = 43; 数组1、创建数字并赋值 123456//创建数组并赋值 var a = new Array(); a[0] = 10; a[1] = 21; a[2] = 33; a[3] = &quot;adacs&quot;; 获取div高度1、获取div的高度可根据浏览器页面的高度，算出div的高度123456789101112131415 &lt;div id=&quot;outscroll&quot;&gt;&lt;/div&gt;&lt;script src=&quot;js/jquery/jQuery-2.2.0.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt; $(document).ready(function()&#123; var o = document.getElementById(&quot;outscroll&quot;); var h = o.offsetHeight; //高度 var w = o.offsetWidth; //宽度 alert(h); alert(w); &#125;); &lt;/script&gt;这是几个其他获取高度的值。alert($(window).height()); //浏览器当前窗口可视区域高度alert($(document).height()); //浏览器当前窗口文档的高度alert($(document.body).height());//浏览器当前窗口文档body的高度alert($(document.body).outerHeight(true));//浏览器当前窗口文档body的总高度 包括border padding marginalert($(window).width()); //浏览器当前窗口可视区域宽度alert($(document).width());//浏览器当前窗口文档对象宽度alert($(document.body).width());//浏览器当前窗口文档body的高度alert($(document.body).outerWidth(true));//浏览器当前窗口文档body的总宽度 包括border padding margin或者，这样也可以获取1234567 &lt;script type=&quot;text/javascript&quot;&gt; window.onload = function()&#123; var deviceHeight = document.documentElement.clientHeight; console.log(deviceHeight); &#125; &lt;/script&gt; 键盘按回车键登录当我们做登录页面时，习惯性的喜欢输入完账号和密码，再按下回车键登录，这里我用js控制了一下enter键来实现的。12345678910111213&lt;body onkeydown=&quot;on_return()&quot;&gt;&lt;/body&gt; &lt;script type=&quot;text/javascript&quot;&gt; //回车时，默认是登陆 function on_return()&#123; if(window.event.keyCode == 13)&#123; if (document.all(&apos;btnLogin&apos;)!=null)&#123; document.all(&apos;btnLogin&apos;).click(); &#125; &#125; &#125; &lt;/script&gt;","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://xiayunhu.github.io/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://xiayunhu.github.io/tags/JavaScript/"}]},{"title":"HTML小例子","slug":"HTML小知识","date":"2019-04-28T16:00:00.000Z","updated":"2019-07-01T09:27:09.585Z","comments":true,"path":"HTML/HTML小知识/","link":"","permalink":"http://xiayunhu.github.io/HTML/HTML小知识/","excerpt":"","text":"文本域textarea标签最近做到两个文本域内容比较无法给局部文字改变颜色，只能对整个文本域进行改变样式。我找了下，textarea标签是不支持局部文字改变样式的，也不支持其内部嵌套其他的标签。既然不能用这个，我就用div自己仿一个文本域出来。只要用到HTML5全局的contenteditable 属性就可实现。contenteditable 属性规定是否可编辑元素的内容，当设置html标签的contenteditable=”true”时，就可以开启这个元素的编辑模式。达到textarea的效果。具体代码如下： 123456789101112131415161718192021222324252627282930313233&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;文本域仿写&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; div&#123; width: 500px; height: 300px; border: 1px solid black; &#125; span&#123; font-family: &quot;微软雅黑&quot;; font-size: 20px; padding: 10px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div contenteditable=&quot;true&quot;&gt; &lt;!-- 设为false则不能更改，但能删除整体文字 --&gt; &lt;span contenteditable=&quot;false&quot;&gt;我的：&lt;/span&gt; &lt;span style=&quot;color: red&quot;&gt;xyh&apos;s Blog www.xyhwh.cn&lt;/span&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 完美的绝对底部在平时做网页开发遇到这样的排版问题，在主体内容不足够多或者未完全加载出来之前，就会出现底部一栏紧跟着主体内容的下面，这不是我们想要的，原因是因为没有足够的垂直空间使得页脚推到浏览器窗口最底部。我们所期待的是页脚一直处于页面最底部。 代码如下 1234567891011121314151617181920212223242526272829303132333435363738&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; html, body &#123; height: 100%;&#125;.wrapper &#123; position: relative; min-height: 100%; padding-bottom: 50px; box-sizing: border-box; font-size: 2rem;&#125;.footer &#123; position: absolute; bottom: 0; height: 50px;&#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;wrapper&quot;&gt; &lt;div class=&quot;content&quot;&gt;页面主体内容区域 &lt;/div&gt; &lt;div class=&quot;footer&quot;&gt;需要做到 Sticky Footer 效果的页脚 &lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 文字首行缩进在文字描述的时候会用到首行缩进两个字符，让文章显得更有条理性。 123456789101112131415161718192021222324&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; p&#123; text-indent: 2em; // 段落首行缩进2个字符 &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt; 少壮不努力，长大敲代码。 隔壁老王在努力的加班打代码。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 键盘回车键登录当我们输入完密码时，习惯性的按回车键登录，但有时测试的时候没有用，可以加上一段js就可以实现了 12345678910111213141516171819202122232425262728293031323334353637&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; &lt;title&gt;登录&lt;/title&gt; &lt;/head&gt; &lt;body onkeydown=&quot;on_return()&quot;&gt; &lt;!-- 加上函数--&gt; &lt;div class=&quot;login-form&quot;&gt; &lt;div class=&quot;log-bwn&quot;&gt; &lt;button type=&quot;button&quot; id=&quot;btnLogin&quot;&gt;登 录&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;script type=&quot;text/javascript&quot;&gt;//回车时，默认是登陆 function on_return()&#123; &lt;!-- 回车键键盘数值为13--&gt; if(window.event.keyCode == 13)&#123; &lt;!-- 选到登录按钮的id--&gt; if (document.all(&apos;btnLogin&apos;)!=null)&#123; document.all(&apos;btnLogin&apos;).click(); &#125; &#125; &#125;&lt;/script&gt; &lt;/html&gt; 这样就可以实现回车登录了。 设置div高度用百分比12 position:fixed;/* 设置高度为百分比*/height: 100%;","categories":[{"name":"HTML","slug":"HTML","permalink":"http://xiayunhu.github.io/categories/HTML/"}],"tags":[{"name":"HTML","slug":"HTML","permalink":"http://xiayunhu.github.io/tags/HTML/"}]},{"title":"PHP支付宝在线即时到账","slug":"PHP支付宝在线即时到账","date":"2019-04-17T16:00:00.000Z","updated":"2019-05-06T07:31:08.450Z","comments":true,"path":"PHP/PHP支付宝在线即时到账/","link":"","permalink":"http://xiayunhu.github.io/PHP/PHP支付宝在线即时到账/","excerpt":"","text":"前言现在越来越多的电子网上支付，其中支付宝还是大众的选择。支付宝官方给出的即时到账功能还是很不错的，可以让用户在线向开发者的支付宝账号支付现金，交易的金额可以即时到账，可以让开发者快速的回笼资金。交易操作简单、步骤少，方便。较为安全的是交易的资金可以三个月内可退款，更多了解可看支付宝官方文档。 准备首先我们是用PHP作为后台的开发，运行PHP的环境的搭建，支付宝账号（注意是商家的要用营业执照备案的）我这里就是把流程讲一下，最后你把ID换一下就好。应用范例：可以参照官方给的流程图大体了解一下。我们要使用即时到账接口的权限，需要先签约即时到账产品。签约方式：在线申请。申请地址：即时到账申请地址，提交申请后，会有一个审核阶段，审核通过才能使用该接口。 下载demo接口下载即时到账交易接口， 选择(create_direct_pay_by_user) ,我用电脑打开官方的网址发现没有选择下载的链接，我这里把百度云盘下载好的接口分享一下接口demo提取码：g74r。把下载好的文件解压，选择MD5签名版本的文件，你会发现一共有六个文件夹，我们只选择create_direct_pay_by_user-PHP-UTF-8的文件。 文件结构代码文件结构如下：123456789101112131415161718192021222324252627create_direct_pay_by_user-php-UTF-8 │ ├lib┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈类文件夹 │ │ │ ├alipay_core.function.php ┈┈┈┈┈┈支付宝接口公用函数文件 │ │ │ ├alipay_notify.class.php┈┈┈┈┈┈┈支付宝通知处理类文件 │ │ │ ├alipay_submit.class.php┈┈┈┈┈┈┈支付宝各接口请求提交类文件 │ │ │ └alipay_md5.function.php┈┈┈┈┈┈┈支付宝接口MD5函数文件 │ ├log.txt┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈日志文件 │ ├alipay.config.php┈┈┈┈┈┈┈┈┈┈┈┈基础配置类文件 │ ├alipayapi.php┈┈┈┈┈┈┈┈┈┈┈┈┈┈支付宝接口入口文件 │ ├notify_url.php ┈┈┈┈┈┈┈┈┈┈┈┈┈服务器异步通知页面文件 │ ├return_url.php ┈┈┈┈┈┈┈┈┈┈┈┈┈页面跳转同步通知文件 │ ├cacert.pem ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈用于CURL中校验SSL的CA证书文件 │ └readme.txt ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈使用说明文本注意：里面的文件不要删。","categories":[{"name":"PHP","slug":"PHP","permalink":"http://xiayunhu.github.io/categories/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://xiayunhu.github.io/tags/PHP/"}]},{"title":"PHP基础第二章","slug":"PHP基础第二篇","date":"2019-04-11T16:00:00.000Z","updated":"2019-08-08T08:27:20.603Z","comments":true,"path":"PHP/PHP基础第二篇/","link":"","permalink":"http://xiayunhu.github.io/PHP/PHP基础第二篇/","excerpt":"","text":"前言这一篇先来PHP数据库的最最基本的操作，增删改查，我会把我写的例子代码附上，其实做简单的项目，无外乎是对数据库的数据的增删改查这是一个后台语言基本的操作，我在网上看了好多的php对数据库操作的代码例子，写的太乱，大多数都是千篇一律（Ctr+c）得来的。 为什么我要把对数据库操作放到第二章，很多学习的人，开始一门语言的学习，大多数都是看着教程从第一章看到最后一章，刚开始还好，学个几天，就感觉很是枯燥，天天的就是基本类型、函数等、完全体会不到有什么成就感。久而久之就丧失了学习的兴趣。我看了下编程的书和教程，百分之99的资料都是从基本的知识点开始，我看着看着就感觉学不下去了，感觉学了毫无用处。我们为什么不能把学习的顺序颠倒一下呢，既然都是学习，就要找到更适合自己的学习方法。没接触过PHP肯定看到这一章什么都不会，但不要着急，这只是让你了解或给你增加写程序的成就感的。不会没关系，我们可以学，就怕对学失去了信息。不要怕，先了解一下，自己体验一下做个小项目的流程。每当做出一个功能模块时，内心肯定是和高中做出一道难题心情一样的。加油吧！ 对数据库的增删改查例子首先用到的工具有：phpstudy、 zend studio、 mysql数据库。其实只要我们了解了具体的思路流程，以后无论对数据库怎样操作都有头绪，不至于脑子一片混乱。在zend studio里创建一个php项目名字随便起。创建的项目是学生管理系统 创建数据库我这里数据库的用户名和密码都是root，数据库名是study，表名为stu，创建好数据库，里面的数据自己随便填下。 数据库设计如下图所示： index.php文件首先创建一个主页面index.php,虽然是一个小的例子，但我们尽可能的做的像管理系统。以下是代码： 123456789101112131415161718192021222324252627282930313233343536373839404142&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;学生管理系统&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; .top&#123; width:100%; height:50px; border-bottom:2px solid black; background-color:#EAEAEA; &#125; img&#123; height:50px; float:left; &#125; h2&#123; float:left; margin-left:20px; &#125; h1&#123; text-align:center; margin-top:200px; &#125;&lt;/style&gt; &lt;/head&gt;&lt;div class=&quot;top&quot;&gt;&lt;img alt=&quot;头像&quot; src=&quot;img/1.jpg&quot;&gt;&lt;h2&gt;xxx学生管理系统&lt;/h2&gt;&lt;/div&gt; &lt;h1&gt;&lt;a href=&quot;SelectStu.php&quot;&gt;欢迎进入xxx学生管理平台！&lt;/a&gt;&lt;/h1&gt; &lt;/body&gt;&lt;/html&gt; 显示的页面如下： 当我们点击中间的大字时，页面会跳转到要显示的学生信息页面，同时完成的是对数据库的查询操作。你可以将数据库里的数据全部显示，也可以分页显示（后边会讲到），我这里是将数据库里的所有的数据全部显示到页面上。 SelectStu.php文件（查询功能）这个就是查询页面。代码如下：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;查询学生信息&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; .top&#123; width:100%; height:50px; border-bottom:2px solid black; background-color:#EAEAEA; &#125; img&#123; height:50px; float:left; &#125; .top h2&#123; float:left; margin-left:20px; &#125; h1&#123; text-align:center; margin-top:200px; &#125;&lt;/style&gt;&lt;script&gt; function doDel(id)&#123; if(confirm(&apos;确认删除？&apos;))&#123; window.location=&apos;AddStuChu.php?AddStuChu=del&amp;id=&apos;+id; &#125; &#125;&lt;/script&gt;&lt;/head&gt;&lt;div class=&quot;top&quot;&gt;&lt;img alt=&quot;头像&quot; src=&quot;img/1.jpg&quot;&gt;&lt;h2&gt;xxx 学 生 管 理 系 统&lt;/h2&gt;&lt;/div&gt;&lt;h2 style=&quot;text-align:center;&quot;&gt;展 示 学 生 所 有 信 息 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&apos;AddStu.php&apos;&gt;添加&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt; &lt;div style=&quot;margin: 0 auto; width:800px; height:400px; border:2px solid black;&quot;&gt;&lt;table width=&quot;800&quot; height=&quot;400&quot; border=&quot;1&quot; cellspacing=&quot;0&quot;&gt;&lt;tr&gt; &lt;th&gt;学号&lt;/th&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;年龄&lt;/th&gt; &lt;th&gt;性别&lt;/th&gt; &lt;th&gt;班级&lt;/th&gt; &lt;th&gt;住址&lt;/th&gt; &lt;th&gt;籍贯&lt;/th&gt; &lt;th&gt;操作&lt;/th&gt;&lt;/tr&gt;&lt;?php header(&quot;Content-Type: text/html; charset=utf-8&quot;); //连接数据库 $conn = mysqli_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;root&quot;,&quot;study&quot;); mysqli_set_charset($conn, &quot;utf8&quot;); //执行数据库 $sql_select = &quot;select * from stu&quot;; //解析数据 foreach ($conn-&gt;query($sql_select) as $row)&#123; echo &quot;&lt;tr&gt;&quot;; echo &quot;&lt;th&gt;&#123;$row[&apos;id&apos;]&#125; &lt;/th&gt;&quot;; echo &quot;&lt;th&gt;&#123;$row[&apos;name&apos;]&#125;&lt;/th&gt;&quot;; echo &quot;&lt;th&gt;&#123;$row[&apos;age&apos;]&#125; &lt;/th&gt;&quot;; echo &quot;&lt;th&gt;&#123;$row[&apos;sex&apos;]&#125; &lt;/th&gt;&quot;; echo &quot;&lt;th&gt;&#123;$row[&apos;class&apos;]&#125;&lt;/th&gt;&quot;; echo &quot;&lt;th&gt;&#123;$row[&apos;adrass&apos;]&#125; &lt;/th&gt;&quot;; echo &quot;&lt;th&gt;&#123;$row[&apos;jiguan&apos;]&#125;&lt;/th&gt;&quot;; echo &quot;&lt;td&gt; &lt;a href=&apos;UpdataStu.php?id=&#123;$row[&apos;id&apos;]&#125;&apos;&gt;修改&lt;/a&gt; &lt;a href=&apos;javascript:void(0);&apos; onclick=&apos;doDel(&#123;$row[&apos;id&apos;]&#125;)&apos;&gt;删除&lt;/a&gt; &lt;/td&gt;&quot;; echo &quot;&lt;/tr&gt;&quot;; &#125; ?&gt;&lt;/table&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 显示的页面如下： 是不是有点像一点管理系统的样子了，这表格里的数据全是数据库的，实现了数据库到页面的展现。很好，你迈出了很大的一步。如果报错页面不显示数据，查找一下是不是数据库没连接成功，或者函数是不是写错了。最后实在不行，我这上边的代码原封不动的复制到你的文件里试一下，还不行的话欢迎联系我。 AddStu.php文件（添加功能）有了查询页面了，当然还不满足客户的需求，还需要对数据库添加数据，因为用户不会使用数据库系统进行加数据，他们需要的是傻瓜式操作。有了需求就知道了方向了，我们在页面上写出多个输入框，供用户输入，代码如下：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788 &lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;学生管理系统&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; .top&#123; width:100%; height:50px; border-bottom:2px solid black; background-color:#EAEAEA; &#125; img&#123; height:50px; float:left; &#125; .top h2&#123; float:left; margin-left:20px; &#125; table&#123; margin-left:300px; margin-top:50px; &#125;&lt;/style&gt; &lt;/head&gt;&lt;div class=&quot;top&quot;&gt;&lt;img alt=&quot;头像&quot; src=&quot;img/1.jpg&quot;&gt;&lt;h2&gt;xxx 学 生 管 理 系 统&lt;/h2&gt;&lt;/div&gt; &lt;h2 style=&quot;text-align:center;&quot;&gt;添 加 学 生 信 息 栏&lt;/h2&gt;&lt;hr&gt; &lt;div style=&quot;margin: 0 auto; width:800px; height:400px; border:2px solid black;&quot;&gt; //传值，把页面上输入的值通过表单的post传到AddStuChu.php处理文件里去，里面有接收的程序 &lt;form action=&quot;AddStuChu.php?AddStuChu=add&quot; method=&quot;post&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt;姓名:&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;年龄:&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;age&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;性别:&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;男&quot;&gt;男 &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;女&quot;&gt;女 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;班级:&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;class&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;住址:&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;adrass&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;籍贯:&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;jiguan&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&quot;SelectStu.php&quot;&gt;返回&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;submit&quot; value=&quot;添加&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;input type=&quot;reset&quot; value=&quot;重置&quot;&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/form&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 展示的页面如下图： 光是这样是不行的，因为没有和数据库连接，我们输入的信息没地方接收，所以我们还要写一个处理添加页面的程序，将传来的数据放到数据库中。 AddStuChu.php文件（数据处理）这里面有对数据添加、修改、删除的处理，我将它们都放在了一个页面上，方便我们查看。具体代码如下：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172 &lt;?php header(&quot;Content-Type: text/html; charset=utf-8&quot;); //连接数据库 $conn=mysqli_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;root&quot;,&quot;study&quot;); mysqli_set_charset($conn,&quot;utf8&quot;); if($conn)&#123; switch ($_GET[&apos;AddStuChu&apos;])&#123; //增加数据 case &apos;add&apos;: $name = $_POST[&apos;name&apos;]; $sex = $_POST[&apos;sex&apos;]; $age = $_POST[&apos;age&apos;]; $class = $_POST[&apos;class&apos;]; $adrass = $_POST[&apos;adrass&apos;]; $jiguan = $_POST[&apos;jiguan&apos;]; $sql = &quot;insert into stu (`name`, sex, age, class, adrass, jiguan) values (&apos;$name&apos;, &apos;$sex&apos;,&apos;$age&apos;,&apos;$class&apos;,&apos;$adrass&apos;,&apos;$jiguan&apos;)&quot;; $rw = mysqli_query($conn,$sql); if ($rw &gt; 0)&#123; echo &quot;&lt;script&gt;alert(&apos;添加成功&apos;);&lt;/script&gt;&quot;; &#125;else&#123; echo &quot;&lt;script&gt;alert(&apos;添加失败&apos;);&lt;/script&gt;&quot;; &#125; header(&apos;Location: SelectStu.php&apos;); break;// 删除 case &apos;del&apos;://get $id = $_GET[&apos;id&apos;]; $sql = &quot;delete from stu where id=&apos;$id&apos;&quot;; $rw = mysqli_query($conn,$sql); if ($rw &gt; 0)&#123; echo &quot;&lt;script&gt;alert(&apos;删除成功&apos;);&lt;/script&gt;&quot;; &#125;else&#123; echo &quot;&lt;script&gt;alert(&apos;删除失败&apos;);&lt;/script&gt;&quot;; &#125; header(&apos;Location: SelectStu.php&apos;); break; // 修改处理 case &apos;edit&apos;: //post $id = $_POST[&apos;id&apos;]; $name = $_POST[&apos;name&apos;]; $age = $_POST[&apos;age&apos;]; $class = $_POST[&apos;class&apos;]; $sex = $_POST[&apos;sex&apos;]; $adrass = $_POST[&apos;adrass&apos;]; $jiguan = $_POST[&apos;jiguan&apos;]; $sql = &quot;update stu set name=&apos;$name&apos;,age=&apos;$age&apos;,class=&apos;$class&apos;,sex=&apos;$sex&apos;,adrass=&apos;$adrass&apos;,jiguan=&apos;$jiguan&apos; where id=&apos;$id&apos;;&quot;; $rw = mysqli_query($conn,$sql); if ($rw &gt; 0)&#123; echo &quot;&lt;script&gt;alert(&apos;更新成功&apos;);&lt;/script&gt;&quot;; &#125;else&#123; echo &quot;&lt;script&gt;alert(&apos;更新失败&apos;);&lt;/script&gt;&quot;; &#125; header(&apos;Location: SelectStu.php&apos;); break; default: header(&apos;Location: SelectStu.php&apos;); break; &#125; &#125;else&#123; die(&apos;数据库连接失败&apos; .mysqli_connect_error()); &#125; ?&gt; 上边是一个switch循环，每个case是一个功能模块，上边有备注，实在看不懂就照着写五六遍，熟悉了就记脑子里了，慢慢的就理解了。不要怕错。 UpdataStu.php文件（更新功能）接下来便是更新数据了。具体的思路是：在主页面上应的人物信息点击修改按钮，然后通过绑定id，修改的页面上接收要修改的信息的id，然后从数据库里把数据显示到页面上，我们可以把原先的数据去掉，写上新的数据，重新保存到数据库去，这样再刷新主页面，页面就会显示出我们刚修改的数据可。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;学生管理系统&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;?php //1. 链接数据库 header(&quot;content-type:text/html;charset=utf8&quot;); $conn=mysqli_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;root&quot;,&quot;study&quot;); mysqli_set_charset($conn,&quot;utf8&quot;); $id=$_GET[&apos;id&apos;]; //2.执行sql $sql_select = &quot;select * from stu where id=&apos;$id&apos;&quot;; $stmt = mysqli_query($conn,$sql_select); $stu = mysqli_fetch_assoc($stmt); // 解析数据把每个数据列出来 ?&gt; &lt;h3&gt;修改学生信息&lt;/h3&gt; &lt;form action=&quot;AddStuChu.php?AddStuChu=edit&quot; method=&quot;post&quot;&gt; &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value=&quot;&lt;?php echo $stu[&apos;id&apos;];?&gt;&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt;姓名&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;name&quot; value=&quot;&lt;?php echo $stu[&apos;name&apos;];?&gt;&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;年龄&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;age&quot; value=&quot;&lt;?php echo $stu[&apos;age&apos;];?&gt;&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;性别&lt;/td&gt; &lt;td&gt; //注意，单选按钮判断数据库性别是男还是女 &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;男&quot; &lt;?php echo ($stu[&apos;sex&apos;] == &quot;男&quot;)? &quot;checked&quot;:&quot;&quot;;?&gt; &gt;男 &lt;/td&gt; &lt;td&gt; &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;女&quot; &lt;?php echo ($stu[&apos;sex&apos;] == &quot;女&quot;)? &quot;checked&quot;:&quot;&quot;;?&gt; &gt;女 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;班级&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;class&quot; value=&quot;&lt;?php echo $stu[&apos;class&apos;]?&gt;&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;住址&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;adrass&quot; value=&quot;&lt;?php echo $stu[&apos;adrass&apos;]?&gt;&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;籍贯&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;jiguan&quot; value=&quot;&lt;?php echo $stu[&apos;jiguan&apos;]?&gt;&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt;&lt;input type=&quot;submit&quot; value=&quot;修改&quot;&gt;&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;reset&quot; value=&quot;重置&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 以上代码就是更新数据页面的所有代码。更新数据的逻辑模块在AddStuChu.php文件上。页面如下图所示： 删除功能好了Everybody，到这里我们已经完成了三大功能了，数据查询、数据修改、数据添加。你已经很棒了，接下来我们将完成最后一个功能:删除功能。其实上边的文件已经包含了删除的代码了，这里我把删除的代码罗列一下，自己知道哪些是删除的代码就好。 1234567891011121314151617181920212223242526272829 //这一行是查询页面SelectStu.php上的删除按钮，用js绑定了一个点击事件触发一个函数doDel传进来要删除信息的id &lt;a href=&apos;javascript:void(0);&apos; onclick=&apos;doDel(&#123;$row[&apos;id&apos;]&#125;)&apos;&gt;删除&lt;/a&gt; // 删除功能模块 case &apos;del&apos;://get $id = $_GET[&apos;id&apos;]; $sql = &quot;delete from stu where id=&apos;$id&apos;&quot;; $rw = mysqli_query($conn,$sql); if ($rw &gt; 0)&#123; echo &quot;&lt;script&gt;alert(&apos;删除成功&apos;);&lt;/script&gt;&quot;; &#125;else&#123; echo &quot;&lt;script&gt;alert(&apos;删除失败&apos;);&lt;/script&gt;&quot;; &#125; header(&apos;Location: SelectStu.php&apos;); break; //查询页面SelectStu.php上js脚本，当你点击删除时，会弹出一个对话框，询问你是否确认删除，比较人性化。 &lt;script&gt; if(confirm(&apos;确认删除？&apos;))&#123; function doDel(id)&#123; //将接收的id传送到功能模块，进行数据库信息的删除。 window.location=&apos;AddStuChu.php?AddStuChu=del&amp;id=&apos;+id; &#125; &#125; &lt;/script&gt; 这就是删除的整个流程。 后记好了，到这里PHP对mysql数据库的增删改查操作已经全部结束了，这一章，你学到了php最精华、最重要的部分，学习的时光总是过得很快我们就要说再见了，在接下来的时光，我会陪你一起学习PHP以及WEB前端等技术。谢谢您支持！我们下章再会。","categories":[{"name":"PHP","slug":"PHP","permalink":"http://xiayunhu.github.io/categories/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://xiayunhu.github.io/tags/PHP/"}]},{"title":"PHP基础第一章","slug":"PHP基础第一篇","date":"2019-04-01T16:00:00.000Z","updated":"2019-05-06T07:30:59.505Z","comments":true,"path":"PHP/PHP基础第一篇/","link":"","permalink":"http://xiayunhu.github.io/PHP/PHP基础第一篇/","excerpt":"","text":"前言刚刚毕业实习的我在公司呆了段时间，由于各种原因，考虑再三，最终我还是决定学习PHP作为我后台的入门语言。为什么要选择PHP，因为PHP入门比较容易，可在不同的平台上运行（Windows、Linux、Unix、Mac OS X 等），与目前几乎所有的正在被使用的服务器相兼容（Apache、IIS 等）。从这章开始，将记录下我所学PHP全部的历程，切记一定要坚持！不要听别人说Java也好，学了一半就去学Java了。贵在坚持。加油！一起努力。 第一个程序具体在哪运行的自己可以去菜鸟教程或者百度上找。12345678910&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;body&gt; &lt;?php echo &quot;Hello World!&quot;; ?&gt; &lt;/body&gt; &lt;/html&gt;","categories":[{"name":"PHP","slug":"PHP","permalink":"http://xiayunhu.github.io/categories/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://xiayunhu.github.io/tags/PHP/"}]},{"title":"Layui的左侧三级导航栏","slug":"layui","date":"2019-03-26T16:00:00.000Z","updated":"2019-05-06T07:30:51.968Z","comments":true,"path":"Layui/layui/","link":"","permalink":"http://xiayunhu.github.io/Layui/layui/","excerpt":"","text":"layui简介经典模块化前端框架之一，由职业前端倾情打造，面向所有层次的前后端开发者，零门槛开箱即用的前端UI解决方案。有好多的功能组件直接使用，非常的方便，自适应页面。可以加入layui社区获得更多的帮助。因为我在layui的官网给出的案例没有导航的三级菜单，偶然的发现了一个三级的菜单，这个使用layui-nav-tree树写的三级，我感觉挺好用的。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;&gt; &lt;title&gt;&lt;/title&gt; &lt;link href=&quot;~/layui-v2.2.5/layui-v2.2.5/layui/css/layui.css&quot; rel=&quot;stylesheet&quot; /&gt; &lt;style&gt; ol li a &#123; background-color: rgba(0,0,0,1) !important; &#125; .three_this &#123; background-color: #808080 !important; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;layui-layout-body&quot;&gt; &lt;div class=&quot;layui-layout layui-layout-admin&quot;&gt; &lt;div class=&quot;layui-header&quot;&gt; &lt;div class=&quot;layui-logo&quot;&gt;layui 后台布局&lt;/div&gt; &lt;ul class=&quot;layui-nav layui-layout-left&quot;&gt; &lt;li class=&quot;layui-nav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;控制台&lt;/a&gt;&lt;/li&gt; &lt;li class=&quot;layui-nav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;商品管理&lt;/a&gt;&lt;/li&gt; &lt;li class=&quot;layui-nav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;用户管理&lt;/a&gt;&lt;/li&gt; &lt;li class=&quot;layui-nav-item&quot;&gt; &lt;a href=&quot;javascript:;&quot;&gt;日常&lt;/a&gt; &lt;dl class=&quot;layui-nav-child&quot;&gt; &lt;dd&gt;&lt;a href=&quot;&quot;&gt;邮件管理&lt;/a&gt;&lt;/dd&gt; &lt;dd&gt;&lt;a href=&quot;&quot;&gt;消息管理&lt;/a&gt;&lt;/dd&gt; &lt;dd&gt;&lt;a href=&quot;&quot;&gt;授权管理&lt;/a&gt;&lt;/dd&gt; &lt;/dl&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul class=&quot;layui-nav layui-layout-right&quot;&gt; &lt;li class=&quot;layui-nav-item&quot;&gt; &lt;a href=&quot;javascript:;&quot;&gt; &lt;img src=&quot;~/images/tb.png&quot; class=&quot;layui-nav-img&quot; /&gt; .Net海 &lt;/a&gt; &lt;dl class=&quot;layui-nav-child&quot;&gt; &lt;dd&gt;&lt;a href=&quot;&quot;&gt;基本资料&lt;/a&gt;&lt;/dd&gt; &lt;dd&gt;&lt;a href=&quot;&quot;&gt;安全设置&lt;/a&gt;&lt;/dd&gt; &lt;/dl&gt; &lt;/li&gt; &lt;li class=&quot;layui-nav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;退出&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;layui-side layui-bg-black&quot;&gt; &lt;div class=&quot;layui-side-scroll&quot;&gt; &lt;ul class=&quot;layui-nav layui-nav-tree&quot; lay-filter=&quot;test&quot;&gt; &lt;li class=&quot;layui-nav-item layui-nav-itemed&quot;&gt; &lt;a class=&quot;&quot; href=&quot;javascript:;&quot;&gt;所有商品&lt;/a&gt; &lt;dl class=&quot;layui-nav-child&quot;&gt; &lt;dd&gt; &lt;a href=&quot;javascript:;&quot; class=&quot;menu_three &quot;&gt;列表一&lt;/a&gt; &lt;ol class=&quot;layui-nav-child&quot; style=&quot;display: none;&quot;&gt; &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;三级列表一&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;三级列表二&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;三级列表三&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;超链接&lt;/a&gt;&lt;/li&gt; &lt;/ol&gt; &lt;/dd&gt; &lt;dd&gt;&lt;a href=&quot;javascript:;&quot; class=&quot;menu_three&quot;&gt;列表二&lt;/a&gt; &lt;ol class=&quot;layui-nav-child&quot; style=&quot;display: none;&quot;&gt; &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;三级列表一&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;三级列表二&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;三级列表三&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;&quot;&gt;超链接&lt;/a&gt;&lt;/li&gt; &lt;/ol&gt; &lt;/dd&gt; &lt;dd&gt;&lt;a href=&quot;javascript:;&quot;&gt;列表三&lt;/a&gt;&lt;/dd&gt; &lt;dd&gt;&lt;a href=&quot;&quot;&gt;超链接&lt;/a&gt;&lt;/dd&gt; &lt;/dl&gt; &lt;/li&gt; &lt;li class=&quot;layui-nav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;云市场&lt;/a&gt;&lt;/li&gt; &lt;li class=&quot;layui-nav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;发布商品&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;layui-body&quot;&gt; &lt;!-- 内容主体区域 --&gt; &lt;div style=&quot;padding: 15px;&quot;&gt;内容主体区域&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;layui-footer&quot;&gt; &lt;!-- 底部固定区域 --&gt; © layui.com - 底部固定区域 &lt;/div&gt; &lt;/div&gt; //注意路劲 &lt;script src=&quot;~/layui-v2.2.5/layui-v2.2.5/layui/layui.js&quot;&gt;&lt;/script&gt; &lt;script&gt; //JavaScript代码区域 layui.use([&apos;element&apos;, &apos;jquery&apos;], function () &#123; var element = layui.element, $ = layui.jquery; $(&quot;.menu_three&quot;).on(&quot;click&quot;, function () &#123; $(this).next().toggle(); $.each($(this).parent().siblings(), function (i, e) &#123; $(e).find(&quot;ol&quot;).hide();; &#125;); &#125;) $(&quot;ol&quot;).on(&quot;click&quot;, &quot;li a&quot;, function () &#123; $.each($(this).parent().siblings(), function (i, e) &#123; $(e).find(&quot;a&quot;).removeClass(&apos;three_this&apos;) &#125;); $(this).addClass(&apos;three_this&apos;); // 添加当前元素的样式 &#125;) &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"Layui","slug":"Layui","permalink":"http://xiayunhu.github.io/categories/Layui/"}],"tags":[{"name":"Layui","slug":"Layui","permalink":"http://xiayunhu.github.io/tags/Layui/"}]},{"title":"Next主题","slug":"Next主题","date":"2018-11-12T16:00:00.000Z","updated":"2019-05-06T07:30:55.457Z","comments":true,"path":"Hexo/Next主题/","link":"","permalink":"http://xiayunhu.github.io/Hexo/Next主题/","excerpt":"","text":"安装Next主题进入myblog文件夹中，在空白处右键打开Git Bash Here，输入命令1git clone https://github.com/theme-next/hexo-theme-next themes/next等待一会，如果没有报错，就证明Next主题已经安装好了。此时还不能访问Next主题需要下面的配置在myblog文件夹下面可以看到一个_config.yml文件，（在接下来的文章里我们都称为它站点配置文件）。右键选择用Notepad++打开（建议），在里面找到1theme: landscape然后你将里面的landscape改成next1theme: next此时，就可以和上面讲述的验证是否安装成功步骤一样，查看时候更改主题成功。在myblog文件夹里打开Git Bash Here对话框，依次输入以下命令1hexo clean等待完成后再输入1hexo g再输入1hexo s #如果端口不对，如上边一样用5000端口然后等待启动，然后打开浏览器，输入http://localhost:4000。就可以看到是否主题更改成功","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://xiayunhu.github.io/categories/Hexo/"}],"tags":[{"name":"Next","slug":"Next","permalink":"http://xiayunhu.github.io/tags/Next/"}]},{"title":"Hexo框架+GitHub搭建My Blog","slug":"Hexo+GitHub搭建博客","date":"2018-11-08T16:00:00.000Z","updated":"2019-08-08T09:34:29.650Z","comments":true,"path":"Hexo/Hexo+GitHub搭建博客/","link":"","permalink":"http://xiayunhu.github.io/Hexo/Hexo+GitHub搭建博客/","excerpt":"","text":"前言思来想去，还是决定记录下我搭建的这个Blog的所有流程，这也算是我的处子作啦。首先要对Hexo表示感谢。我是Windows的系统，所以本文讲的都是在本系统中是如何搭建的。即将毕业的我，突然感觉该需要一个东西来记录下我的所学所想。大概拖拖拉拉的用了好多天才最后搭建好,主要是提高下自己的功力。 下面我将分步详细介绍如何用Hexo和GitHubPages来搭建Blog。个人能力有限，以下流程有什么不懂的或者有好的知识与我分享欢迎联系我，大家共同进步。 What is HexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。出自台湾大学生 tommy351 之手。是一个基于Node.js的静态博客程序。另外还有一个好处：使用 Hexo + GitHub 搭建博客不需要购买域名和服务器，由 Github 提供域名和网站页面空间。支持多种框架主题，我选择的是Next主题，简约。 What is GitHubGitHub 是一个面向开源及私有 软件项目的托管平台，因为只支持 Git 作为唯一的版本库格式进行托管。有足够的免费空间（1G），自己管理资料，保存可靠。2018年10月19日，欧盟正式无条件批准了微软以75亿美元收购GitHub。 搭建前准备工作 Hexo官方文档&nbsp;&nbsp;（具体对hexo有什么问题可以查看文档） Git&nbsp;&nbsp;（点进去可直接下载最新版本，具体的安装流程） Node.js&nbsp;&nbsp;（选个最新的下载就好，具体安装流程） Next主题官网&nbsp;&nbsp;（一些配置讲解的还是比较详细） 其他的一些主题可供参考&nbsp;&nbsp;（根据自己的喜好风格，选择自己的主题） Notepad++（我用的是这个来编写Markdown文章的，如果文章出现乱码，可以用记事本打开另存为，然后选择UTF-8编码就好了） 开始搭建说了那么多，准备工作也可以了，现在撸起袖子干吧！安装环境依赖（Git and Node.js）首先把前面说的Git和Node.js安装到电脑上（Windows系统），教程也有，对于聪明的你来说，不会难倒你。这是我们搭建博客基层的软件。以下所有的命令输入都是在Git软件里面进行的。 安装Hexo在你安装好Git软件后，你可以在电脑空白地方或者桌面上右击鼠标，就会看到Git GUI Here和Git Bash Here，然后在你想把博客源文件放的电脑哪个位置，在里面创建个文件夹用于保存Hexo生成的博客内容（文件夹名可为myblog）。然后进入该文件夹，空白位置右击，然后点击Git Bash Here ，在里面输入：1npm install -g hexo-cli接着输入hexo -v然后输出以下内容就表示安装成功了（结果有可能不一样因为版本问题，但不影响使用）12345678910111213$ hexo -vhexo: 3.7.1hexo-cli: 1.1.0os: Windows_NT 10.0.10240 win32 x64http_parser: 2.7.0node: 7.0.0v8: 5.4.500.36uv: 1.9.1zlib: 1.2.8ares: 1.10.1-DEVicu: 57.1modules: 51openssl: 1.0.2j如果没有报错，就表示安装成功了。接下来继续输入：1hexo init # 初始化组件回车后npm就会自动安装博客所需的组件了，你要做的就是等待，等全部安装完就可以了。这时你就看到文件夹里会出现以下目录结构：1234567├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes验证以下hexo是否安装成功，还是在这个文件夹里右击找到Git Bash Here在里面输入命令1hexo g等待加载完然后在输入命令1hexo s出现这种样式，就启动成功了12INFO Start processingINFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.然后打开你的浏览器，在网址栏里输入http://localhost:4000（默认端口为4000）。就会看到博客的原始状态，也就证明安装成功了如下图所示： 注意：有可能会发生这种情况，hexo安装没错，也能成功运行，启动也可以，就是不能访问。原因是：那是你的电脑端口被占用了，hexo默认的端口是4000，你应该换个端口运行，可换成hexo s -p 5000就可以访问了。运行成功后，就在刚刚的Git Bash Here对话框中按键盘上的Ctrl+c停止服务，浏览器就不能浏览了。到此整个hexo搭建的博客结束了。此时感觉自己小有成就感。 部署到GitHub首先你需要创建一个Github：https://github.com/账号。在你注册时，一定要记住你使用的注册的邮箱，GitHub大多数都是通过邮箱发送消息的。申请成功后，会有邮箱通知，验证下就可以了。 创建代码仓库这时用我们自己的GitHub用户名建立仓库，http://username.github.io这样的用户或访问站点，每个用户名只能建立一个。首先，在保证登录的情况下，我们点击右上角的+号，点击New repository,新建一个仓库 进入后，在Repositoty name输入框里填写自己的用户名.github.io。例如我的用户名为xiayunhu，则填写xiayunhu.github.io 随后选择Setting进入设置，找到Github Pages如下： 然后我们需要任意选择一个主题，点击Choose a theme，然后选择好后，页面会跳转到仓库里如图所示： 此时你再打开Setting，我们会看到你开启了GitHub Pages之后得到的域名如下： 现在你可以使用https://UserName.github.io，访问自己的博客网站了。关于更多Github的使用和介绍，大家可以去菜鸟教程上或者百度自行了解。 配置SSH本地博客和Github都做好了，接下来我们如何将本地Git项目和Github连接起来？就是用SSH。还是在博客文件夹里右击打开Git Bash Here输入以下命令1ssh -T git@github.com如图所示： 输入命令回车，然后你会看到这样的反馈1The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established. RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48. Are you sure you want to continue connecting (yes/no)?直接在后面输入yes再回车，看到下面的图的结果，就证明配置成功了。 注意，问题来了哦，当你输入yes后，有可能会提示如下信息因为大多数的情况是github账号没有添加ssh公钥信息，这是打开GitHub网站，在确保登录的情况下，找到网站的右上角找到Settings 点进去，在左边找到SSH and GPG keys后，点进去右上角找到New SSH key点进去后如下图所示： 如图片中的key提示，我们要原样复制~/.ssh/id_rsa.pub文件的内容。如果没有该文件在Git Bash Here里输入以下命令1ssh-keygen -t rsa然后一直回车结束，然后在C盘的C:\\Users\\Administrator.ssh里找到id_rsa.pub文件，用记事本打开，Ctrl+A -&gt; Ctrl+C在New SSH key里面Ctrl+V粘贴，点击Add SSh key保存就可以了。最后再输入1ssh -T git@github.com回车就OK了。 将本地文件部署到GitHub在把本地仓库传到github上去之前，还需要设置username和email，因为github每次commit都会记录他们。12$ git config --global user.name &quot;your name&quot; #仓库的名字$ git config --global user.email &quot;your_email@youremail.com&quot; #你的邮箱设置完后，我们每次使用hexo d命令时就不用每次都输入密码了。接下来我们就要修改hexo中的_config.yml文件（也就是站点配置文件）如下图所示: 找到文件里面的deploy标签，改成如下列所示，Ctrl+S保存，此时要注意，冒号后边都要加上一个空格，否则会报错的。1234deploy: type: git repo: git@github.com:xiayunhu/xiayunhu.github.io.git branch: master然后在文件夹里运行Git Bash Here输入以下命令1npm install hexo-deployer-git --save再依次输入123hexo cleanhexo generate #可简写hexo ghexo deploy #可简写hexo d出现以下提示 那么恭喜你，个人博客已经部署到GitHub上了。你可以去你的GitHub仓库查看是否有信息，稍微等待一下就可以访问http://your_user_name.github.io（your_user_name也就是你的仓库名字），此时你就可以看到你的个人博客了。 将自己的域名和GitHub Pages的空间绑定我们现在可以通过本地浏览或者GitHub Pages提供的域名访问了，但总感觉不是自己的东西，于是我就自己申请了一个域名，来浏览自己的博客，这样在介绍自己的博客的时候，明显的高大尚许多。我是在腾讯云的网站上申请的，需要备案（比较麻烦，需要半个多月），你也可以在阿里云上申请或者其他的地方购买，应该不腾讯云快，我介绍的是腾讯云上申请的域名。 申请域名此时要注意的是：不需要购买服务器进入到腾讯云的官网,在产品一栏，找到域名注册，这样就可以注册了，不同的域名价格不一，自行找个好记得就好。 具体备案，根据里面的流程自行备案。等备案好，然后对域名进行解析： 点击添加解析，记录类型选A或CNAME，A记录的记录值就是ip地址，github(官方文档)提供了两个IP地址，192.30.252.153和192.30.252.154，这两个IP地址为github的服务器地址，两个都要填上，解析记录设置两个www和@，线路就默认就行了，CNAME记录值填你的github博客网址。如我的是xiayunhu.github.io。 这些全部设置完成后，此时你并不能要申请的域名访问你的博客。接着你需要做的是在hexo根目录的source文件夹里创建CNAME文件，不带任何后缀，里面添加你的域名信息，如：www.xyhwh.com。注意搭建完成访问出现404 ：你认为配置没有问题，那么可能只是你的浏览器在捣鬼，可尝试清除浏览器缓存再访问或者换个浏览器访问。应该就解决了。 GitHub Pages里配置域名进入GitHub，然后找到Settings如下图所示： 然后往下找，找到GitHub Pages一栏如图所示： 这样整个用Hexo+GitHub搭建的博客到现在就搭建完成了。 后记以上所述，就是搭上建博客的全部流程，如果你有什么问题或者文章有错的地方，欢迎在下面留言。具体的主题配置，将会在下节详细介绍。 参考的资料： Hexo中文文档 Next主题使用文档 感谢：","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://xiayunhu.github.io/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://xiayunhu.github.io/tags/Hexo/"}]},{"title":"小小语录","slug":"shi","date":"2018-09-15T14:22:07.000Z","updated":"2019-04-23T07:06:03.711Z","comments":true,"path":"小故事/shi/","link":"","permalink":"http://xiayunhu.github.io/小故事/shi/","excerpt":"","text":"1. 星光不问赶路人，时光不负有心人。你尽管踏实下来，一步一步往前走，何时抵达只是时间问题。 2. 如果有来生，要做一棵树，站成永恒，没有悲欢的姿势。一半在土里安详，一半在风里飞扬，一半洒落阴凉，一半沐浴阳光，非常沉默非常骄傲，从不依靠从不寻找。- - - - - -三毛 3. 每个人都要有一个梦想，万一实现了呢？而我呢，却有很多梦想，全面撒网，重点培养。所谓的梦想，都是自己在某一天，某一个地点，发生了某些事情，灵光一闪，就想拥有他或是去实现他。 4. 那些萌生的梦想就是自己的目标，如果不实现，我就会觉得留下了人生的遗憾，每一件事我都在努力的去做，但是仍然会有遗憾留下，那是自己真正的无能为力，只要有点希望，我又何尝不去争取呢！某一 天我想做一件事，却发现自己无能为力，那不仅仅是痛苦，留下的遗憾可能为一生都无法去弥补，所以我一直在尽可能的去努力，坚持不放弃每一件事，有时候走了偏路，没有人会提醒，甚至没有走回去的 机会，这样的遗憾会是多么的不甘心。 5. 给自己一个梦想，给自己一个目标，有个努力的方向，我不会放弃，我只能坚持到底。","categories":[{"name":"小故事","slug":"小故事","permalink":"http://xiayunhu.github.io/categories/小故事/"}],"tags":[{"name":"Me","slug":"Me","permalink":"http://xiayunhu.github.io/tags/Me/"}]},{"title":"斯人若彩虹,遇上方知有","slug":"first","date":"2018-09-05T15:22:07.000Z","updated":"2019-04-23T07:06:11.648Z","comments":true,"path":"小故事/first/","link":"","permalink":"http://xiayunhu.github.io/小故事/first/","excerpt":"","text":"一.写博客的经历从上大学开始，慢慢的接触到了一些新鲜的东西，毕竟是学的软件专业，当时就感觉如果有一个自己的网站，是多么的牛。然后脑子里就有一些想法，可能是技术的原因，一直拖着，偶尔也想想就是不知从哪下手。 经历了大一的时光，心中还是有对自己网站的向往，当时也稍微懂点技术上的问题了，可感觉还是技术不够。又开始拖着。直到大二结束的暑假。我在偶然的机会在公众号里看到一位大神写的文章，名叫：程序员为什么要写博客？我认真的看了一遍，说的特别好，尤其是到了用什么搭建的博客。 第一次听到hexo这个词，我当时看到就感觉，哇，肯定很难，我能做出来吗？我该怎么做？适合我吗？一系列的问题，想找人问，想了一遍认识的好友里，最后还是放弃了。然后找到了度娘（百度），打开网页的那一刻，太惊喜了，哇，原来有那么详细的教程，Hexo+github从零开始搭建博客。我心里就认定了，就是这个了。 二.为什么要写博客？为什么要写自己的博客，刚开始我心里也有疑问，从有打算到开始动手做，拖拖拉拉的两年了。后来学的东西越来越多，自己经常百度，几乎搜到的东西好多都是别人博客里写的，我知道最多的就是，CSDN、博客园、简书等。我也比较喜欢写一些东西。想创建博客不是为了以后有多少多少粉丝，想出名等，而是想把自己的一些东西记录下来，总结的工作经验以及一些自己的心得，有幸可以和大家一起分享。","categories":[{"name":"小故事","slug":"小故事","permalink":"http://xiayunhu.github.io/categories/小故事/"}],"tags":[{"name":"Me","slug":"Me","permalink":"http://xiayunhu.github.io/tags/Me/"}]}]}